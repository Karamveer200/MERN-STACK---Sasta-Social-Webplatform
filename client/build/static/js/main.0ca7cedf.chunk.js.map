{"version":3,"sources":["actions/types.js","actions/alert.js","utils/api.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","actions/profile.js","components/profile-forms/ProfileForm.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/layout/spinner.gif","components/layout/Spinner.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/posts/PostForm.js","actions/post.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","utils/formatDate.js","components/posts/PostItem.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","GET_REPOS","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","dispatch","id","uuid","type","payload","setTimeout","api","axios","create","baseURL","headers","interceptors","response","use","res","err","Promise","reject","setAuthToken","token","defaults","common","localStorage","setItem","removeItem","loadUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","sent","data","t0","stop","_x","apply","arguments","Navbar","_ref$auth","auth","isAuthenticated","loading","logout","authLinks","_jsxs","children","_jsx","Link","to","className","onClick","href","guestLinks","Fragment","prototypes","PropTypes","func","isRequired","connect","state","Landing","Redirect","protoTypes","bool","login","email","password","_ref3","_callee3","body","errors","_context3","post","forEach","error","_x3","_useState","useState","_useState2","_slicedToArray","formdata","updateData","onChange","e","_objectSpread","_defineProperty","target","name","value","onSubmit","preventDefault","placeholder","minLength","register","formData","_ref2","_callee2","_context2","_x2","props","password2","alerts","alert","length","map","concat","key","getCurrentProfile","statusText","status","initialState","company","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","profile","createProfile","history","edit","undefined","_ref5","_callee5","_context5","push","_x5","_ref$profile","setFormData","_useState3","_useState4","displaySocialInputs","toggleSocialInputs","useEffect","profileData","social","Array","isArray","join","console","log","document","scrollTop","documentElement","addExperience","_ref6","_callee6","_context6","put","_x6","title","from","current","description","checked","disabled","cols","rows","addEducation","_ref8","_callee8","_context8","_x8","school","degree","fieldofstudy","alertReducer","action","_toConsumableArray","filter","getItem","user","authReducer","profiles","repos","profileReducer","posts","_id","likes","comments","comment","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Spinner","src","spinner","style","width","margin","display","alt","DashboardActions","deleteExperience","_ref9","_callee9","_context9","delete","_x9","experience","experiences","exp","Moment","format","deleteEducation","_ref10","_callee10","_context10","_x10","education","educations","edu","addPost","text","setText","required","deleteAccount","_ref11","_callee11","_context11","window","confirm","_x11","pic","avatar","PostForm","Experience","Education","Component","component","rest","_objectWithoutProperties","_excluded","Route","render","ProfileItem","_ref$profile$user","slice","skill","index","getProfiles","formatDate","date","Intl","DateTimeFormat","Date","PostItem","addLike","removeLike","deletePost","_ref$post","showActions","defaultProps","_ref4","_callee4","_context4","_x4","getPosts","addComment","postId","_ref7","_callee7","_context7","_x7","deleteComment","commentId","_ref$comment","getPost","match","params","class","CommentForm","CommentItem","ProfileTop","rel","Object","entries","ProfileAbout","trim","split","ProfileExperience","_ref$experience","ProfileEducation","_ref$education","getGithubRepos","githubUsername","username","repo","html_url","stargazers_count","watchers_count","getProfileById","userId","ProfileGithub","App","AOS","init","duration","once","Provider","Router","exact","path","Alert","Switch","PrivateRoute","Dashboard","Login","Register","Profiles","Profile","ProfileForm","AddExperience","AddEducation","Posts","Post","ReactDOM","React","StrictMode","getElementById"],"mappings":"+MAAaA,EAAY,YACZC,EAAe,eACfC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAc,cACdC,EAAa,aACbC,EAAgB,gBAChBC,EAAa,aACbC,EAAS,SACTC,EAAc,cACdC,EAAe,eACfC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAY,YACZC,EAAY,YACZC,EAAW,WACXC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAW,WACXC,EAAc,cACdC,EAAiB,iB,QCpBjBC,EAAW,SAACC,EAAKC,GAAS,OAAK,SAAAC,GACxC,IAAMC,EAAKC,cACXF,EAAS,CACLG,KAAM9B,EACN+B,QAAQ,CAACN,MAAKC,YAAWE,QAG7BI,YAAW,kBAAIL,EAAS,CACpBG,KAAK7B,EACL8B,QAAQH,GACV,GAAC,IACP,CAAE,E,QCVIK,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,OACTC,QAAS,CACP,eAAgB,sBAWpBJ,EAAIK,aAAaC,SAASC,KACxB,SAAAC,GAAG,OAAIA,CAAG,IACV,SAAAC,GAIE,OAAOC,QAAQC,OAAOF,EACxB,IAGaT,QChBAY,EAVM,SAAAC,GACfA,GACFb,EAAIc,SAASV,QAAQW,OAAO,gBAAkBF,EAC9CG,aAAaC,QAAQ,QAASJ,YAEvBb,EAAIc,SAASV,QAAQW,OAAO,gBACnCC,aAAaE,WAAW,SAE5B,ECMaC,EAAW,WAAH,sBAAAC,EAAAC,YAAAC,cAAAC,MAAQ,SAAAC,EAAM9B,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGtC,OAFEZ,aAAaH,OACZD,EAAaI,aAAaH,OAC7Ba,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGqB5B,EAAI6B,IAAI,SAAQ,OAA5BrB,EAAGkB,EAAAI,KACTpC,EAAS,CACLG,KAAK1B,EACL2B,QAAQU,EAAIuB,OACdL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEFhC,EAAS,CACLG,KAAKzB,IACP,yBAAAsD,EAAAO,OAAA,GAAAT,EAAA,kBAET,gBAAAU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,EAhBoB,EAgBpB,E,OCzBYC,EAAS,SAAHjB,GAAmD,IAADkB,EAAAlB,EAA7CmB,KAAMC,EAAeF,EAAfE,gBAAiBC,EAAOH,EAAPG,QAAUC,EAAMtB,EAANsB,OAEjDC,EACJC,eAAA,MAAAC,SAAA,CACAC,cAAA,MAAAD,SACAD,eAACG,IAAI,CAACC,GAAG,SAAQH,SAAA,CACjBC,cAAA,KAAGG,UAAU,wBACbH,cAAA,QAAMG,UAAU,GAAEJ,SAAC,iBAIlBC,cAAA,MAAAD,SACDD,eAACG,IAAI,CAACC,GAAG,YAAWH,SAAA,CAACC,cAAA,KAAGG,UAAU,iBAAmB,KAAEH,cAAA,QAAMG,UAAU,GAAEJ,SAAC,kBAE1EC,cAAA,MAAAD,SACAD,eAACG,IAAI,CAACC,GAAG,oCAAmCH,SAAA,CAC5CC,cAAA,KAAGG,UAAU,uBACbH,cAAA,QAAMG,UAAU,GAAEJ,SAAC,iBAInBC,cAAA,MAAAD,SACAD,eAACG,IAAI,CAACC,GAAG,aAAYH,SAAA,CACrBC,cAAA,KAAGG,UAAU,oBACbH,cAAA,QAAMG,UAAU,UAASJ,SAAC,qBAI1BC,cAAA,MAAAD,SAAID,eAAA,KAAGM,QAASR,EAAQS,KAAK,KAAIN,SAAA,CACjCC,cAAA,KAAGG,UAAU,wBAA2B,IACxCH,cAAA,QAAMG,UAAU,UAASJ,SAAC,qBAMtBO,EACJR,eAAA,MAAAC,SAAA,CACAC,cAAA,MAAAD,SAAID,eAACG,IAAI,CAACC,GAAG,YAAWH,SAAA,CAACC,cAAA,KAAGG,UAAU,iBAAmB,eACzDH,cAAA,MAAAD,SACAD,eAACG,IAAI,CAACC,GAAG,oCAAmCH,SAAA,CAC5CC,cAAA,KAAGG,UAAU,uBACbH,cAAA,QAAMG,UAAU,GAAEJ,SAAC,iBAGnBC,cAAA,MAAAD,SAAIC,cAACC,IAAI,CAACC,GAAG,YAAWH,SAAC,eACzBC,cAAA,MAAAD,SAAIC,cAACC,IAAI,CAACC,GAAG,SAAQH,SAAC,eAGrB,OACGD,eAAA,OAAKK,UAAU,yBAAwBJ,SAAA,CACvCC,cAAA,MAAAD,SACED,eAACG,IAAI,CAACC,GAAG,IAAGH,SAAA,CAACC,cAAA,KAAGG,UAAU,gBAAkB,+BAE5CR,GAAWK,cAACO,WAAQ,CAAAR,SAAEL,EAAiBG,EAAWS,MAG5D,EAEAf,EAAOiB,WAAa,CAClBZ,OAAOa,IAAUC,KAAKC,WACtBlB,KAAKgB,IAAUC,KAAKC,YAEtB,IAIeC,eAJS,SAAAC,GAAK,MAAI,CAC/BpB,KAAKoB,EAAMpB,KACZ,GAEuC,CAACG,ODWnB,WAAH,OAAS,SAAAhD,GAC1BA,EAAS,CAACG,KAAKtB,IACfmB,EAAS,CAACG,KAAKlB,GAEjB,CAAC,GCfc+E,CAAmCrB,G,OCrErCuB,EAAU,SAAHxC,GAMhB,OANoCA,EAAfoB,gBAuBhBM,cAACe,IAAQ,CAACb,GAAG,eAhBfF,cAAA,WAASG,UAAU,UAASJ,SAC3BC,cAAA,OAAKG,UAAU,eAAcJ,SAE3BD,eAAA,OAAKK,UAAU,gBAAeJ,SAAA,CAC5BC,cAAA,MAAIG,UAAU,UAASJ,SAAC,yBACxBC,cAAA,KAAGG,UAAU,OAAMJ,SAAC,qEAIpBD,eAAA,OAAKK,UAAU,UAASJ,SAAA,CACtBC,cAACC,IAAI,CAACC,GAAG,YAAYC,UAAU,0CAAyCJ,SAAC,YACzEC,cAACC,IAAI,CAACC,GAAG,SAASC,UAAU,uCAAsCJ,SAAC,mBAOjF,EAEAe,EAAQE,WAAa,CACnBtB,gBAAgBe,IAAUQ,MAE5B,IAIeL,eAJS,SAAAC,GAAK,MAAI,CAC/BnB,gBAAgBmB,EAAMpB,KAAKC,gBAC5B,GAEckB,CAAyBE,G,sBCwCzBF,eAJS,SAACC,GAAK,MAAM,CAClCnB,gBAAiBmB,EAAMpB,KAAKC,gBAC7B,GAEuC,CAAEwB,MHnBrB,SAACC,EAAOC,GAAQ,sBAAAC,EAAA9C,YAAAC,cAAAC,MAAK,SAAA6C,EAAM1E,GAAQ,IAAA2E,EAAA7D,EAAA8D,EAAA,OAAAhD,cAAAG,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OACpB,OAA1ByC,EAAO,CAAEJ,QAAOC,YAAUK,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAGZ5B,EAAIwE,KAAK,QAASH,GAAM,KAAD,EAAnC7D,EAAG+D,EAAAzC,KAETpC,EAAS,CACPG,KAAMxB,EACNyB,QAASU,EAAIuB,OAGfrC,EAASyB,KAAYoD,EAAA3C,KAAA,gBAAA2C,EAAA5C,KAAA,EAAA4C,EAAAvC,GAAAuC,EAAA,UAEfD,EAASC,EAAAvC,GAAI1B,SAASyB,KAAKuC,SAG/BA,EAAOG,SAAQ,SAAAC,GAAK,OAAIhF,EAASH,EAASmF,EAAMlF,IAAK,UAAU,IAGjEE,EAAS,CACPG,KAAMvB,IACL,yBAAAiG,EAAAtC,OAAA,GAAAmC,EAAA,kBAEN,gBAAAO,GAAA,OAAAR,EAAAhC,MAAA,KAAAC,UAAA,EAvBkC,EAuBlC,GGJYsB,EAzEM,SAAHtC,GAAoC,IAA9B4C,EAAK5C,EAAL4C,MAAOxB,EAAepB,EAAfoB,gBAC7BoC,EAA+BC,mBAAS,CACtCZ,MAAO,GACPC,SAAU,KACVY,EAAAC,YAAAH,EAAA,GAHKI,EAAQF,EAAA,GAAEG,EAAUH,EAAA,GAKnBb,EAAoBe,EAApBf,MAAOC,EAAac,EAAbd,SAETgB,EAAW,SAACC,GAAC,OACjBF,EAAUG,wBAAC,CAAC,EAAIJ,GAAQ,GAAAK,YAAA,GAAGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QAAS,EAM/D,OAAIhD,EACKM,cAACe,IAAQ,CAACb,GAAG,eAGpBF,cAACO,WAAQ,CAAAR,SACPD,eAAA,OAAKK,UAAU,cAAaJ,SAAA,CAC1BC,cAAA,MAAIG,UAAU,qBAAoBJ,SAAC,YACnCD,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CACjBC,cAAA,KAAGG,UAAU,gBAAkB,2BAGjCL,eAAA,QAAMK,UAAU,OAAOwC,SAAU,SAACN,GAAC,OAfxB,SAACA,GAChBA,EAAEO,iBACF1B,EAAMC,EAAOC,EACf,CAY8CuB,CAASN,EAAE,EAACtC,SAAA,CAClDC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEjD,KAAK,QACL8F,YAAY,gBACZJ,KAAK,QACLC,MAAOvB,EACPiB,SAAU,SAACC,GAAC,OAAKD,EAASC,EAAE,EAC5BlC,UAAU,2BAGdH,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEjD,KAAK,WACL8F,YAAY,WACZ1C,UAAU,uBACVsC,KAAK,WACLK,UAAU,IACVJ,MAAOtB,EACPgB,SAAU,SAACC,GAAC,OAAKD,EAASC,EAAE,MAIhCrC,cAAA,SACEjD,KAAK,SACLoD,UAAU,mDACVuC,MAAM,aAIV5C,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CAAC,0BACKC,cAACC,IAAI,CAACC,GAAG,YAAWH,SAAC,mBAKtD,IC+Bea,gBAHS,SAAAC,GAAK,MAAK,CAChCnB,gBAAiBmB,EAAMpB,KAAKC,gBAC7B,GACuC,CAACjD,WAAUsG,SJhE3B,SAAAC,GAAQ,sBAAAC,EAAA1E,YAAAC,cAAAC,MAAG,SAAAyE,EAAMtG,GAAQ,IAAAc,EAAA8D,EAAA,OAAAhD,cAAAG,MAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAAtE,KAAC,EAADsE,EAAArE,KAAC,EAGxB5B,EAAIwE,KAAK,SAAUsB,GAAS,OAAxCtF,EAAGyF,EAAAnE,KAETpC,EAAS,CACTG,KAAM5B,EACN6B,QAASU,EAAIuB,OAEbrC,EAASyB,KAAY8E,EAAArE,KAAA,gBAAAqE,EAAAtE,KAAA,EAAAsE,EAAAjE,GAAAiE,EAAA,UAGf3B,EAAS2B,EAAAjE,GAAI1B,SAASyB,KAAKuC,SAE7BA,EAAOG,SAAQ,SAAAC,GAAK,OAAIhF,EAASH,EAASmF,EAAMlF,IAAK,UAAU,IAGnEE,EAAS,CACLG,KAAK3B,IACP,yBAAA+H,EAAAhE,OAAA,GAAA+D,EAAA,kBAET,gBAAAE,GAAA,OAAAH,EAAA5D,MAAA,KAAAC,UAAA,EArB+B,EAqB/B,GI2CcsB,EA5FS,SAACyC,GAEvB,IAAAvB,EAA8BC,mBAAS,CACrCU,KAAK,GACLtB,MAAM,GACNC,SAAS,GACTkC,UAAU,KACVtB,EAAAC,YAAAH,EAAA,GALII,EAAQF,EAAA,GAAEG,EAAUH,EAAA,GAOpBS,EAAoCP,EAApCO,KAAMtB,EAA8Be,EAA9Bf,MAAOC,EAAuBc,EAAvBd,SAAUkC,EAAapB,EAAboB,UAEvBlB,EAAW,SAACC,GAAC,OAAGF,EAAUG,wBAAC,CAAC,EAAGJ,GAAQ,GAAAK,YAAA,GAAGF,EAAEG,OAAOC,KAAMJ,EAAEG,OAAOE,QAAO,EAEzEC,EAAQ,eAAArE,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAM2D,GAAC,OAAA7D,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtBuD,EAAEO,iBAGCxB,IAAWkC,EACZD,EAAM5G,SAAS,uBAAwB,UAEvC4G,EAAMN,SAAS,CAACN,OAAMtB,QAAOC,aAC9B,wBAAAxC,EAAAO,OAAA,GAAAT,EAAA,KACF,gBATaU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KAUd,OAAI+D,EAAM3D,gBACDM,cAACe,IAAQ,CAACb,GAAG,eAGlBJ,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,MAAIG,UAAU,sBAAqBJ,SAAC,YACpCD,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CAACC,cAAA,KAAGG,UAAU,gBAAkB,0BAEnDL,eAAA,QAAMK,UAAU,OAAOwC,SAAU,SAAAN,GAAC,OAAEM,EAASN,EAAE,EAACtC,SAAA,CAC9CC,cAAA,OAAKG,UAAU,0BAAyBJ,SACtCC,cAAA,SAAOjD,KAAK,OACXoD,UAAU,oCACV0C,YAAY,OACZJ,KAAK,OACLC,MAAOD,EACPL,SAAY,SAAAC,GAAC,OAAED,EAASC,EAAE,MAG7BvC,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,SAAOjD,KAAK,QACZoD,UAAU,uBACT0C,YAAY,gBACZJ,KAAK,QACLC,MAAOvB,EACPiB,SAAY,SAAAC,GAAC,OAAED,EAASC,EAAE,IAG3BrC,cAAA,SAAOG,UAAU,YAAWJ,SAAC,iCAE/BC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEjD,KAAK,WACL8F,YAAY,WACZJ,KAAK,WACLtC,UAAU,uBACVuC,MAAOtB,EACPgB,SAAY,SAAAC,GAAC,OAAED,EAASC,EAAE,MAG9BrC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEjD,KAAK,WACL8F,YAAY,mBACZJ,KAAK,YACLtC,UAAU,uBACVuC,MAAOY,EACPlB,SAAY,SAAAC,GAAC,OAAED,EAASC,EAAE,MAG9BrC,cAAA,SAAOjD,KAAK,SAASoD,UAAU,mDAAmDuC,MAAM,gBAG1F5C,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CAAC,4BACOC,cAACC,IAAI,CAACC,GAAG,SAAQH,SAAC,iBAKrD,ICxEea,I,MAAAA,aAHS,SAAAC,GAAK,MAAG,CAC5B0C,OAAO1C,EAAM2C,MAChB,GACc5C,EAZD,SAAHtC,GAAA,IAAKiF,EAAMjF,EAANiF,OAAM,OAAe,OAATA,GAAiBA,EAAOE,OAAO,GAAKF,EAAOG,KAAI,SAAAF,GAAK,OAC5ExD,cAAA,OAAqBG,UAAS,8BAAAwD,OAAgCH,EAAM7G,WAAYoD,SAC3EyD,EAAM9G,KADD8G,EAAMI,IAEV,GACR,KCKWC,GAAoB,WAAH,sBAAAvF,EAAAC,YAAAC,cAAAC,MAAS,SAAAC,EAAO9B,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEhC5B,EAAI6B,IAAI,eAAe,KAAD,EAAlCrB,EAAGkB,EAAAI,KACTpC,EAAS,CACPG,KAAMrB,EACNsB,QAASU,EAAIuB,OACZL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEYA,EAAAM,GAAI1B,SAASyB,KAAKvC,IAIjCE,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAKkC,EAAAM,GAAI1B,SAASsG,WAAYC,OAAQnF,EAAAM,GAAI1B,SAASuG,UAC7D,yBAAAnF,EAAAO,OAAA,GAAAT,EAAA,kBAEN,gBAAAU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,EAjB6B,EAiB7B,ECnBD,IAAM0E,GAAe,CACnBC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVJ,OAAQ,GACRK,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,IAkQE/D,gBAJS,SAACC,GAAK,MAAM,CAClC+D,QAAS/D,EAAM+D,QAChB,GAEuC,CAAEC,cDzLb,SAAC7B,EAAU8B,GAAO,IAAEC,EAAIzF,UAAAmE,OAAA,QAAAuB,IAAA1F,UAAA,IAAAA,UAAA,GAAQ,sBAAA2F,EAAA1G,YAAAC,cAAAC,MAAK,SAAAyG,EAChEtI,GAAQ,IAAAc,EAAA8D,EAAA,OAAAhD,cAAAG,MAAA,SAAAwG,GAAA,cAAAA,EAAAtG,KAAAsG,EAAArG,MAAA,cAAAqG,EAAAtG,KAAA,EAAAsG,EAAArG,KAAA,EAGY5B,EAAIwE,KAAK,WAAYsB,GAAU,KAAD,EAA1CtF,EAAGyH,EAAAnG,KACTpC,EAAS,CACPG,KAAMrB,EACNsB,QAASU,EAAIuB,OAGfrC,EAASH,EAASsI,EAAO,kBAAoB,kBAAmB,YAGhED,EAAQM,KAAK,cAAcD,EAAArG,KAAA,gBAAAqG,EAAAtG,KAAA,EAAAsG,EAAAjG,GAAAiG,EAAA,UAErB3D,EAAS2D,EAAAjG,GAAI1B,SAASyB,KAAKuC,SAG/BA,EAAOG,SAAQ,SAACC,GAAK,OAAKhF,EAASH,EAASmF,EAAMlF,IAAK,UAAU,IAEnEE,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAKyI,EAAAjG,GAAI1B,SAASsG,WAAYC,OAAQoB,EAAAjG,GAAI1B,SAASuG,UAC7D,yBAAAoB,EAAAhG,OAAA,GAAA+F,EAAA,kBAEN,gBAAAG,GAAA,OAAAJ,EAAA5F,MAAA,KAAAC,UAAA,EAzB4D,EAyB5D,ECgKwDuE,sBAA1CjD,EA/PK,SAAHtC,GAKV,IAADgH,EAAAhH,EAJJsG,QAAWA,EAAOU,EAAPV,QAASjF,EAAO2F,EAAP3F,QACpBkF,EAAavG,EAAbuG,cACAhB,EAAiBvF,EAAjBuF,kBACAiB,EAAOxG,EAAPwG,QAEAhD,EAAgCC,mBAASiC,IAAahC,EAAAC,YAAAH,EAAA,GAA/CkB,EAAQhB,EAAA,GAAEuD,EAAWvD,EAAA,GAE5BwD,EAAkDzD,oBAAS,GAAM0D,EAAAxD,YAAAuD,EAAA,GAA1DE,EAAmBD,EAAA,GAAEE,EAAkBF,EAAA,GAE9CG,qBAAU,WAER,GADKhB,GAASf,KACTlE,GAAWiF,EAAS,CACvB,IAAMiB,EAAWvD,YAAA,GAAQ0B,IACzB,IAAK,IAAMJ,KAAOgB,EACZhB,KAAOiC,IAAaA,EAAYjC,GAAOgB,EAAQhB,IAErD,IAAK,IAAMA,KAAOgB,EAAQkB,OACpBlC,KAAOiC,IAAaA,EAAYjC,GAAOgB,EAAQkB,OAAOlC,IAExDmC,MAAMC,QAAQH,EAAYzB,UAC5ByB,EAAYzB,OAASyB,EAAYzB,OAAO6B,KAAK,OAC/CV,EAAYM,EACd,CACF,GAAG,CAAClG,EAASkE,EAAmBe,IAEhC,IACEX,EAYEjB,EAZFiB,QACAC,EAWElB,EAXFkB,QACAC,EAUEnB,EAVFmB,SACAJ,EASEf,EATFe,OACAK,EAQEpB,EARFoB,OACAC,EAOErB,EAPFqB,eACAC,EAMEtB,EANFsB,IACAC,EAKEvB,EALFuB,QACAC,EAIExB,EAJFwB,SACAC,EAGEzB,EAHFyB,SACAC,EAEE1B,EAFF0B,QACAC,EACE3B,EADF2B,UAGIvC,EAAW,SAACC,GAAC,OACjBkD,EAAWjD,wBAAC,CAAC,EAAIU,GAAQ,GAAAT,YAAA,GAAGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QAAS,EAQhE,OACE5C,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,MAAIG,UAAU,qBAAoBJ,SAAC,sBACnCD,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CACjBC,cAAA,KAAGG,UAAU,gBAAgB,uCAE/BH,cAAA,SAAAD,SAAO,uBAEPD,eAAA,QAAMK,UAAU,OAAOwC,SAAU,SAACN,GAAC,OAdtB,SAACA,GAChBA,EAAEO,iBACFsD,QAAQC,IAAInD,GACZ6B,EAAc7B,EAAU8B,IAASF,EACnC,CAU4CjC,CAASN,EAAE,EAACtC,SAAA,CAClDD,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBD,eAAA,UACE2C,KAAK,SACLtC,UAAU,iBACVuC,MAAOqB,EACP3B,SAAUA,EAASrC,SAAA,CAEnBC,cAAA,UAAAD,SAAQ,iCACRC,cAAA,UAAQ0C,MAAM,YAAW3C,SAAC,cAC1BC,cAAA,UAAQ0C,MAAM,mBAAkB3C,SAAC,qBACjCC,cAAA,UAAQ0C,MAAM,mBAAkB3C,SAAC,qBACjCC,cAAA,UAAQ0C,MAAM,UAAS3C,SAAC,YACxBC,cAAA,UAAQ0C,MAAM,sBAAqB3C,SAAC,wBACpCC,cAAA,UAAQ0C,MAAM,aAAY3C,SAAC,0BAC3BC,cAAA,UAAQ0C,MAAM,SAAQ3C,SAAC,WACvBC,cAAA,UAAQ0C,MAAM,QAAO3C,SAAC,aAExBC,cAAA,SAAOG,UAAU,YAAWJ,SAAC,0DAI/BD,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,SACEjD,KAAK,OACL8F,YAAY,WACZJ,KAAK,UACLC,MAAOuB,EACP9D,UAAU,iBACViC,SAAUA,IAEZpC,cAAA,SAAOG,UAAU,YAAWJ,SAAC,qDAI/BD,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,SACEjD,KAAK,OACL8F,YAAY,WACZ1C,UAAU,iBACVsC,KAAK,UACLC,MAAOwB,EACP9B,SAAUA,IAEZpC,cAAA,SAAOG,UAAU,YAAWJ,SAAC,8CAI/BD,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,SACEjD,KAAK,OACL8F,YAAY,YACZJ,KAAK,WACLtC,UAAU,iBACVuC,MAAOyB,EACP/B,SAAUA,IAEZpC,cAAA,SAAOG,UAAU,YAAWJ,SAAC,+CAI/BD,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,SACEjD,KAAK,OACL8F,YAAY,YACZ1C,UAAU,iBACVsC,KAAK,SACLC,MAAO0B,EACPhC,SAAUA,IAEZpC,cAAA,SAAOG,UAAU,YAAWJ,SAAC,uEAI/BD,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,SACEjD,KAAK,OACL8F,YAAY,mBACZ1C,UAAU,iBACVsC,KAAK,iBACLC,MAAO2B,EACPjC,SAAU,SAACC,GAAC,OAAKD,EAASC,EAAE,IAE9BrC,cAAA,SAAOG,UAAU,YAAWJ,SAAC,8EAK/BD,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,YACE6C,YAAY,2BACZ1C,UAAU,iBACVsC,KAAK,MACLC,MAAO4B,EACPlC,SAAUA,IAEZpC,cAAA,SAAOG,UAAU,YAAWJ,SAAC,uCAG/BD,eAAA,OAAKK,UAAU,OAAMJ,SAAA,CACnBC,cAAA,UACEI,QAAS,kBAAMuF,GAAoBD,EAAoB,EACvD3I,KAAK,SACLoD,UAAU,0CAAyCJ,SACpD,6BAGDC,cAAA,QAAMG,UAAU,WAAUJ,SAAC,gBAG5B2F,GACC5F,eAACS,WAAQ,CAAAR,SAAA,CACPD,eAAA,OAAKK,UAAU,0BAAyBJ,SAAA,CACtCC,cAAA,KAAGG,UAAU,yBACbH,cAAA,SACEjD,KAAK,OACL8F,YAAY,eACZ1C,UAAU,iBACVsC,KAAK,UACLC,MAAO6B,EACPnC,SAAUA,OAIdtC,eAAA,OAAKK,UAAU,0BAAyBJ,SAAA,CACtCC,cAAA,KAAGG,UAAU,0BACbH,cAAA,SACEjD,KAAK,OACL8F,YAAY,gBACZ1C,UAAU,iBACVsC,KAAK,WACLC,MAAO8B,EACPpC,SAAUA,OAIdtC,eAAA,OAAKK,UAAU,0BAAyBJ,SAAA,CACtCC,cAAA,KAAGG,UAAU,yBACbH,cAAA,SACEjD,KAAK,OACL8F,YAAY,eACZ1C,UAAU,iBACVsC,KAAK,UACLC,MAAOgC,EACPtC,SAAUA,OAIdtC,eAAA,OAAKK,UAAU,0BAAyBJ,SAAA,CACtCC,cAAA,KAAGG,UAAU,0BACbH,cAAA,SACEjD,KAAK,OACL8F,YAAY,gBACZ1C,UAAU,iBACVsC,KAAK,WACLC,MAAO+B,EACPrC,SAAUA,OAIdtC,eAAA,OAAKK,UAAU,0BAAyBJ,SAAA,CACtCC,cAAA,KAAGG,UAAU,2BACbH,cAAA,SACEjD,KAAK,OACL8F,YAAY,iBACZ1C,UAAU,iBACVsC,KAAK,YACLC,MAAOiC,EACPvC,SAAUA,UAMlBpC,cAAA,SACEjD,KAAK,SACLoD,UAAU,wDACVC,QAAS,kBA9PjBgG,SAAS7E,KAAK8E,UAAY,OAC1BD,SAASE,gBAAgBD,UAAY,EA6PD,IAE9BrG,cAACC,IAAI,CAACE,UAAU,mCAAmCD,GAAG,aAAYH,SAAC,iBAM3E,ICjQA,IAkHea,eAAQ,KAAM,CAAE2F,cFFF,SAACvD,EAAU8B,GAAO,sBAAA0B,EAAAjI,YAAAC,cAAAC,MAAK,SAAAgI,EAAO7J,GAAQ,IAAAc,EAAA8D,EAAA,OAAAhD,cAAAG,MAAA,SAAA+H,GAAA,cAAAA,EAAA7H,KAAA6H,EAAA5H,MAAA,cAAA4H,EAAA7H,KAAA,EAAA6H,EAAA5H,KAAA,EAE7C5B,EAAIyJ,IAAI,sBAAuB3D,GAAU,KAAD,EAApDtF,EAAGgJ,EAAA1H,KACTpC,EAAS,CACPG,KAAMjB,EACNkB,QAASU,EAAIuB,OAGfrC,EAASH,EAAS,mBAAoB,YACtCqI,EAAQM,KAAK,cAAcsB,EAAA5H,KAAA,gBAAA4H,EAAA7H,KAAA,EAAA6H,EAAAxH,GAAAwH,EAAA,UAErBlF,EAASkF,EAAAxH,GAAI1B,SAASyB,KAAKuC,SAG/BA,EAAOG,SAAQ,SAACC,GAAK,OAAKhF,EAASH,EAASmF,EAAMlF,IAAK,UAAU,IAEnEE,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAKgK,EAAAxH,GAAI1B,SAASsG,WAAYC,OAAQ2C,EAAAxH,GAAI1B,SAASuG,UAC7D,yBAAA2C,EAAAvH,OAAA,GAAAsH,EAAA,kBAEN,gBAAAG,GAAA,OAAAJ,EAAAnH,MAAA,KAAAC,UAAA,EArB8C,EAqB9C,GEnBcsB,EAlHO,SAAHtC,GAAoC,IAA9BiI,EAAajI,EAAbiI,cAAezB,EAAOxG,EAAPwG,QACtChD,EAAgCC,mBAAS,CACvCkC,QAAS,GACT4C,MAAO,GACP1C,SAAU,GACV2C,KAAM,GACN5G,GAAI,GACJ6G,SAAS,EACTC,YAAa,KACbhF,EAAAC,YAAAH,EAAA,GARKkB,EAAQhB,EAAA,GAAEuD,EAAWvD,EAAA,GAUpBiC,EAA6DjB,EAA7DiB,QAAS4C,EAAoD7D,EAApD6D,MAAO1C,EAA6CnB,EAA7CmB,SAAU2C,EAAmC9D,EAAnC8D,KAAM5G,EAA6B8C,EAA7B9C,GAAI6G,EAAyB/D,EAAzB+D,QAASC,EAAgBhE,EAAhBgE,YAE/C5E,EAAW,SAAAC,GAAC,OAChBkD,EAAWjD,wBAAC,CAAC,EAAIU,GAAQ,GAAAT,YAAA,GAAGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QAAS,EAEhE,OACE5C,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,MAAIG,UAAU,qBAAoBJ,SAAC,sBACnCD,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CACjBC,cAAA,KAAGG,UAAU,uBAAuB,4EAGtCH,cAAA,SAAAD,SAAO,uBACPD,eAAA,QACEK,UAAU,OACVwC,SAAU,SAAAN,GACRA,EAAEO,iBACF2D,EAAcvD,EAAU8B,EAC1B,EAAE/E,SAAA,CACFC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEG,UAAU,iBACVpD,KAAK,OACL8F,YAAY,eACZJ,KAAK,QACLC,MAAOmE,EACPzE,SAAUA,MAIdpC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEG,UAAU,iBACVpD,KAAK,OACL8F,YAAY,aACZJ,KAAK,UACLC,MAAOuB,EACP7B,SAAUA,MAGdpC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEjD,KAAK,OACLoD,UAAU,iBACV0C,YAAY,cACZJ,KAAK,WACLC,MAAOyB,EACP/B,SAAUA,MAGdtC,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,MAAAD,SAAI,cACJC,cAAA,SAAOG,UAAU,iBAAiBpD,KAAK,OAAO0F,KAAK,OAAOC,MAAOoE,EAAM1E,SAAUA,OAEnFpC,cAAA,OAAKG,UAAU,aAAYJ,SACzBD,eAAA,KAAAC,SAAA,CACEC,cAAA,SACEjD,KAAK,WACL0F,KAAK,UACLwE,QAASF,EACTrE,MAAOqE,EACP3E,SAAU,WACRmD,EAAWjD,wBAAC,CAAC,EAAIU,GAAQ,IAAE+D,SAAUA,IACvC,IACC,IAAI,mBAIXjH,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,MAAAD,SAAI,YACJC,cAAA,SACEjD,KAAK,OACLoD,UAAU,iBACVsC,KAAK,KACLC,MAAOxC,EACPkC,SAAUA,EACV8E,SAAUH,OAGd/G,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,YACEyC,KAAK,cACLtC,UAAU,iBACVgH,KAAK,KACLC,KAAK,IACLvE,YAAY,mBACZH,MAAOsE,EACP5E,SAAUA,MAGdpC,cAAA,SAAOjD,KAAK,SAASoD,UAAU,wDAAyDC,QAAS,kBAzGrGgG,SAAS7E,KAAK8E,UAAY,OAC1BD,SAASE,gBAAgBD,UAAY,EAwGiF,IAClHrG,cAACC,IAAI,CAACE,UAAU,mCAAmCD,GAAG,aAAYH,SAAC,iBAM3E,IC1GA,IAiHea,eAAQ,KAAM,CAAEyG,aH8CH,SAACrE,EAAU8B,GAAO,sBAAAwC,EAAA/I,YAAAC,cAAAC,MAAK,SAAA8I,EAAO3K,GAAQ,IAAAc,EAAA8D,EAAA,OAAAhD,cAAAG,MAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,cAAA0I,EAAA3I,KAAA,EAAA2I,EAAA1I,KAAA,EAE5C5B,EAAIyJ,IAAI,qBAAsB3D,GAAU,KAAD,EAAnDtF,EAAG8J,EAAAxI,KACTpC,EAAS,CACPG,KAAMjB,EACNkB,QAASU,EAAIuB,OAGfrC,EAASH,EAAS,kBAAmB,YACrCqI,EAAQM,KAAK,cAAcoC,EAAA1I,KAAA,gBAAA0I,EAAA3I,KAAA,EAAA2I,EAAAtI,GAAAsI,EAAA,UAErBhG,EAASgG,EAAAtI,GAAI1B,SAASyB,KAAKuC,SAG/BA,EAAOG,SAAQ,SAACC,GAAK,OAAKhF,EAASH,EAASmF,EAAMlF,IAAK,UAAU,IAEnEE,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAK8K,EAAAtI,GAAI1B,SAASsG,WAAYC,OAAQyD,EAAAtI,GAAI1B,SAASuG,UAC7D,yBAAAyD,EAAArI,OAAA,GAAAoI,EAAA,kBAEN,gBAAAE,GAAA,OAAAH,EAAAjI,MAAA,KAAAC,UAAA,EArB6C,EAqB7C,GGnEcsB,EAjHM,SAAHtC,GAAmC,IAA7B+I,EAAY/I,EAAZ+I,aAAcvC,EAAOxG,EAAPwG,QACpChD,EAAgCC,mBAAS,CACvC2F,OAAQ,GACRC,OAAQ,GACRC,aAAc,GACdd,KAAM,GACN5G,GAAI,GACJ6G,SAAS,EACTC,YAAa,KACbhF,EAAAC,YAAAH,EAAA,GARKkB,EAAQhB,EAAA,GAAEuD,EAAWvD,EAAA,GAUpB0F,EAAiE1E,EAAjE0E,OAAQC,EAAyD3E,EAAzD2E,OAAQC,EAAiD5E,EAAjD4E,aAAcd,EAAmC9D,EAAnC8D,KAAM5G,EAA6B8C,EAA7B9C,GAAI6G,EAAyB/D,EAAzB+D,QAASC,EAAgBhE,EAAhBgE,YAEnD5E,EAAW,SAAAC,GAAC,OAChBkD,EAAWjD,wBAAC,CAAC,EAAIU,GAAQ,GAAAT,YAAA,GAAGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QAAS,EAEhE,OACE5C,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,MAAIG,UAAU,qBAAoBJ,SAAC,uBACnCD,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CACjBC,cAAA,KAAGG,UAAU,uBAAuB,wDAEtCH,cAAA,SAAAD,SAAO,uBACPD,eAAA,QACEK,UAAU,OACVwC,SAAU,SAAAN,GACRA,EAAEO,iBACFyE,EAAarE,EAAU8B,EACzB,EAAE/E,SAAA,CACFC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEjD,KAAK,OACLoD,UAAU,iBACV0C,YAAY,iBACZJ,KAAK,SACLC,MAAOgF,EACPtF,SAAUA,MAIdpC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEjD,KAAK,OACLoD,UAAU,iBACV0C,YAAY,wBACZJ,KAAK,SACLC,MAAOiF,EACPvF,SAAUA,MAGdpC,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,SACEjD,KAAK,OACLoD,UAAU,iBACV0C,YAAY,oBACZJ,KAAK,eACLC,MAAOkF,EACPxF,SAAUA,MAGdtC,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,MAAAD,SAAI,cACJC,cAAA,SAAOG,UAAU,iBAAiBpD,KAAK,OAAO0F,KAAK,OAAOC,MAAOoE,EAAM1E,SAAUA,OAEnFpC,cAAA,OAAKG,UAAU,aAAYJ,SACzBD,eAAA,KAAAC,SAAA,CACEC,cAAA,SACEjD,KAAK,WACL0F,KAAK,UACLwE,QAASF,EACTrE,MAAOqE,EACP3E,SAAU,WACRmD,EAAWjD,wBAAC,CAAC,EAAIU,GAAQ,IAAE+D,SAAUA,IACvC,IACC,IAAI,sBAIXjH,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACzBC,cAAA,MAAAD,SAAI,YACJC,cAAA,SACEjD,KAAK,OACLoD,UAAU,iBACVsC,KAAK,KACLC,MAAOxC,EACPkC,SAAUA,EACV8E,SAAUH,OAGd/G,cAAA,OAAKG,UAAU,aAAYJ,SACzBC,cAAA,YACEyC,KAAK,cACLtC,UAAU,iBACVgH,KAAK,KACLC,KAAK,IACLvE,YAAY,uBACZH,MAAOsE,EACP5E,SAAUA,MAGdpC,cAAA,SAAOjD,KAAK,SAASoD,UAAU,wDAAwDC,QAAS,kBAzGpGgG,SAAS7E,KAAK8E,UAAY,OAC1BD,SAASE,gBAAgBD,UAAY,EAwGgF,IACjHrG,cAACC,IAAI,CAACE,UAAU,mCAAmCD,GAAG,aAAYH,SAAC,iBAM3E,I,oCCxHMiE,GAAe,GAcN6D,OAZf,WAAmD,IAA7BhH,EAAKvB,UAAAmE,OAAA,QAAAuB,IAAA1F,UAAA,GAAAA,UAAA,GAAE0E,GAAc8D,EAAMxI,UAAAmE,OAAA,EAAAnE,UAAA,QAAA0F,EAC7C,OAAO8C,EAAO/K,MACV,KAAK9B,EACD,MAAM,GAAN0I,OAAAoE,aAAWlH,GAAK,CAAEiH,EAAO9K,UAC7B,KAAK9B,EACD,OAAO2F,EAAMmH,QAAO,SAAAxE,GAAK,OAAIA,EAAM3G,KAAOiL,EAAO9K,OAAO,IAC5D,QACI,OAAO6D,EAGnB,ECTMmD,GAAe,CACjBjG,MAAMG,aAAa+J,QAAQ,SAC3BvI,gBAAgB,KAChBC,SAAQ,EACRuI,KAAK,MA0CMC,OAvCf,WAAgD,IAA3BtH,EAAKvB,UAAAmE,OAAA,QAAAuB,IAAA1F,UAAA,GAAAA,UAAA,GAAC0E,GAAa8D,EAAMxI,UAAAmE,OAAA,EAAAnE,UAAA,QAAA0F,EACnCjI,EAAiB+K,EAAjB/K,KAAMC,EAAW8K,EAAX9K,QAEb,OAAOD,GACH,KAAK5B,EACL,KAAKI,EAED,OADA2C,aAAaC,QAAQ,QAASnB,EAAQe,OACtCuE,oCAAA,GACOzB,GACA7D,GAAO,IACV0C,iBAAgB,EAChBC,SAAQ,IAGhB,KAAKvE,EACL,KAAKI,EACL,KAAKC,EACL,KAAKH,EACL,KAAKS,EAED,OADAmC,aAAaE,WAAW,SACxBkE,wBAAA,GACOzB,GAAK,IACR9C,MAAM,KACN2B,iBAAgB,EAChBC,SAAQ,IAEhB,KAAKtE,EACD,OAAAiH,wBAAA,GACOzB,GAAK,IACRnB,iBAAgB,EAChBC,SAAQ,EACRuI,KAAKlL,IAGb,QACI,OAAO6D,EAEnB,EC9CMmD,GAAc,CAChBY,QAAQ,KACRwD,SAAS,GACTzI,SAAQ,EACRiC,MAAM,CAAC,EACPyG,MAAM,IA8CKC,OA3Cf,WAAoD,IAA5BzH,EAAKvB,UAAAmE,OAAA,QAAAuB,IAAA1F,UAAA,GAAAA,UAAA,GAAC0E,GAAc8D,EAAMxI,UAAAmE,OAAA,EAAAnE,UAAA,QAAA0F,EACvCjI,EAAiB+K,EAAjB/K,KAAMC,EAAW8K,EAAX9K,QAEb,OAAOD,GACH,KAAKrB,EACL,KAAKI,EACL,OAAAwG,wBAAA,GACOzB,GAAK,IACP+D,QAAQ5H,EACR2C,SAAQ,IAGb,KAAKhE,EACD,OAAA2G,wBAAA,GACOzB,GAAK,IACRuH,SAASpL,EACT2C,SAAQ,IAGhB,KAAK/D,EACD,OAAA0G,wBAAA,GACOzB,GAAK,IACRlB,SAAQ,EACRiC,MAAM5E,IAEd,KAAKnB,EACD,OAAAyG,wBAAA,GACOzB,GAAK,IACR+D,QAAQ,KACRyD,MAAM,GACN1I,SAAQ,IAEhB,KAAK3D,EACD,OAAAsG,wBAAA,GACOzB,GAAK,IACRwH,MAAMrL,EACN2C,SAAQ,IAEhB,QACI,OAAOkB,EAEnB,ECxCMmD,GAAc,CAChBuE,MAAM,GACN7G,KAAK,KACL/B,SAAQ,EACRiC,MAAM,CAAC,GAmEIF,OAhEf,WAA0C,IAA5Bb,EAAKvB,UAAAmE,OAAA,QAAAuB,IAAA1F,UAAA,GAAAA,UAAA,GAAC0E,GAAc8D,EAAMxI,UAAAmE,OAAA,EAAAnE,UAAA,QAAA0F,EAC5BjI,EAAkB+K,EAAlB/K,KAAMC,EAAY8K,EAAZ9K,QAEd,OAAQD,GACJ,KAAKd,EACD,OAAAqG,wBAAA,GACGzB,GAAK,IACR0H,MAAOvL,EACP2C,SAAS,IAEb,KAAKzD,EACL,OAAAoG,wBAAA,GACOzB,GAAK,IACRa,KAAM1E,EACN2C,SAAS,IAEb,KAAKrD,EACL,OAAAgG,wBAAA,GACOzB,GAAK,IACR0H,MAAM,CAAEvL,GAAO2G,OAAAoE,aAAKlH,EAAM0H,QAC1B5I,SAAS,IAEb,KAAKtD,EACL,OAAAiG,wBAAA,GACOzB,GAAK,IACR0H,MAAO1H,EAAM0H,MAAMP,QAAO,SAACtG,GAAI,OAAKA,EAAK8G,MAAQxL,CAAO,IACxD2C,SAAS,IAEb,KAAKxD,EACL,OAAAmG,wBAAA,GACOzB,GAAK,IACRe,MAAO5E,EACP2C,SAAS,IAEb,KAAKvD,EACL,OAAAkG,wBAAA,GACOzB,GAAK,IACR0H,MAAO1H,EAAM0H,MAAM7E,KAAI,SAAChC,GAAI,OAC5BA,EAAK8G,MAAQxL,EAAQH,GAAEyF,wBAAA,GAAQZ,GAAI,IAAE+G,MAAOzL,EAAQyL,QAAU/G,CAAI,IAElE/B,SAAS,IAEb,KAAKpD,EACL,OAAA+F,wBAAA,GACOzB,GAAK,IACRa,KAAIY,wBAAA,GAAOzB,EAAMa,MAAI,IAAEgH,SAAU1L,IACjC2C,SAAS,IAEb,KAAKnD,EACL,OAAA8F,wBAAA,GACOzB,GAAK,IACRa,KAAIY,wBAAA,GACDzB,EAAMa,MAAI,IACbgH,SAAU7H,EAAMa,KAAKgH,SAASV,QAC1B,SAACW,GAAO,OAAKA,EAAQH,MAAQxL,CAAO,MAGxC2C,SAAS,IAEb,QACA,OAAOkB,EAEf,ECzEe+H,8BAAgB,CAC3BpF,SACA/D,QACAmF,WACAlD,UCHEmH,GAAa,CAACC,MAOLC,GALDC,uBACVC,GALiB,CAAC,EAOlBC,+BAAoBC,mBAAe9J,WAAC,EAAGwJ,MCb5B,OAA0B,oCCa1BO,GAVC,WAAH,OACXpJ,cAACO,WAAQ,CAAAR,SACPC,cAAA,OACEqJ,IAAKC,GACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDC,IAAI,gBAEG,ECPAC,GAAmB,WAC9B,OACE9J,eAAA,OAAKK,UAAU,uCAAuC,WAAS,UAASJ,SAAA,CACtED,eAACG,IAAI,CACHC,GAAG,gBACHC,UAAU,sDAAqDJ,SAAA,CAE/DC,cAAA,KAAGG,UAAU,oCAAsC,mBAGrDL,eAACG,IAAI,CACHC,GAAG,kBACHC,UAAU,qDAAoDJ,SAAA,CAE9DC,cAAA,KAAGG,UAAU,kCAAoC,qBAGnDL,eAACG,IAAI,CACHC,GAAG,iBACHC,UAAU,qDAAoDJ,SAAA,CAE9DC,cAAA,KAAGG,UAAU,uCAAyC,sBAI9D,E,oBCqCeS,eAAQ,KAAM,CAAEiJ,iBboIC,SAAChN,GAAE,sBAAAiN,EAAAvL,YAAAC,cAAAC,MAAK,SAAAsL,EAAOnN,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAnL,KAAA,EAAAmL,EAAAlL,KAAA,EAEjC5B,EAAI+M,OAAO,6BAA6B,KAAD,EAAnDvM,EAAGsM,EAAAhL,KAETpC,EAAS,CACPG,KAAMjB,EACNkB,QAASU,EAAIuB,OAEfrC,EAASH,EAAS,qBAAsB,YAAYuN,EAAAlL,KAAA,gBAAAkL,EAAAnL,KAAA,EAAAmL,EAAA9K,GAAA8K,EAAA,SAEpDpN,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAKsN,EAAA9K,GAAI1B,SAASsG,WAAYC,OAAQiG,EAAA9K,GAAI1B,SAASuG,UAC7D,yBAAAiG,EAAA7K,OAAA,GAAA4K,EAAA,kBAEN,gBAAAG,GAAA,OAAAJ,EAAAzK,MAAA,KAAAC,UAAA,EAfkC,EAelC,GanJcsB,EA3DI,SAAHtC,GAA0C,IAApC6L,EAAU7L,EAAV6L,WAAYN,EAAgBvL,EAAhBuL,iBAC1BO,EAAcD,EAAWzG,KAAI,SAAC2G,GAAG,OACrCvK,eAAA,MAAAC,SAAA,CACEC,cAAA,MAAIG,UAAU,WAAUJ,SAAEsK,EAAIpG,UAC9BjE,cAAA,MAAIG,UAAU,mBAAkBJ,SAAEsK,EAAIxD,QACtC/G,eAAA,MAAIK,UAAU,mBAAkBJ,SAAA,CAC9BC,cAACsK,KAAM,CAACC,OAAO,aAAYxK,SAAEsK,EAAIvD,OAAc,KAAG,IACtC,OAAXuD,EAAInK,GACH,MAEAF,cAACsK,KAAM,CAACC,OAAO,aAAYxK,SAAEsK,EAAInK,QAGrCF,cAAA,MAAIG,UAAU,WAAUJ,SACtBC,cAAA,UACEI,QAAS,kBAAMyJ,EAAiBQ,EAAI7B,IAAI,EACxCrI,UAAU,2BAA0BJ,SACrC,eAfIsK,EAAI7B,IAmBR,IAEP,OACExI,cAACO,WAAQ,CAAAR,SACPD,eAAA,OAAKK,UAAU,eAAe,WAAS,WAAUJ,SAAA,CAC/CC,cAAA,OAAKG,UAAU,UACfH,cAAA,MAAIG,UAAU,gBAAeJ,SAAC,2BAC7BoK,EAAW1G,OAAS,EACnBzD,cAACO,WAAQ,CAAAR,SACPC,cAAA,OAAKG,UAAU,gBAAeJ,SAC5BD,eAAA,SAAOK,UAAU,sBAAqBJ,SAAA,CACpCC,cAAA,SAAAD,SACED,eAAA,MAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,YACJC,cAAA,MAAIG,UAAU,UAASJ,SAAC,UACxBC,cAAA,MAAIG,UAAU,UAASJ,SAAC,UACxBC,cAAA,cAGJA,cAAA,SAAAD,SAAQqK,WAKdpK,cAACO,WAAQ,CAAAR,SACPC,cAAA,KAAGG,UAAU,gBAAeJ,SAAC,8CAMzC,ICUea,eAAQ,KAAM,CAAE4J,gBdmJA,SAAC3N,GAAE,sBAAA4N,EAAAlM,YAAAC,cAAAC,MAAK,SAAAiM,EAAO9N,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,cAAA6L,EAAA9L,KAAA,EAAA8L,EAAA7L,KAAA,EAEhC5B,EAAI+M,OAAO,4BAA4B,KAAD,EAAlDvM,EAAGiN,EAAA3L,KAETpC,EAAS,CACPG,KAAMjB,EACNkB,QAASU,EAAIuB,OAEfrC,EAASH,EAAS,oBAAqB,YAAYkO,EAAA7L,KAAA,gBAAA6L,EAAA9L,KAAA,EAAA8L,EAAAzL,GAAAyL,EAAA,SAEnD/N,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAKiO,EAAAzL,GAAI1B,SAASsG,WAAYC,OAAQ4G,EAAAzL,GAAI1B,SAASuG,UAC7D,yBAAA4G,EAAAxL,OAAA,GAAAuL,EAAA,kBAEN,gBAAAE,GAAA,OAAAH,EAAApL,MAAA,KAAAC,UAAA,EAfiC,EAejC,GclKcsB,EA9DG,SAAHtC,GAAwC,IAAlCuM,EAASvM,EAATuM,UAAWL,EAAelM,EAAfkM,gBACxBM,EAAaD,EAAUnH,KAAI,SAACqH,GAAG,OACnCjL,eAAA,MAAAC,SAAA,CACEC,cAAA,MAAIG,UAAU,WAAUJ,SAAEgL,EAAIrD,SAC9B1H,cAAA,MAAIG,UAAU,mBAAkBJ,SAAEgL,EAAIpD,SACtC3H,cAAA,MAAIG,UAAU,mBAAkBJ,SAAEgL,EAAInD,eACtC9H,eAAA,MAAIK,UAAU,mBAAkBJ,SAAA,CAC9BC,cAACsK,KAAM,CAACC,OAAO,aAAYxK,SAAEgL,EAAIjE,OAAc,KAAG,IACtC,OAAXiE,EAAI7K,GACH,MAEAF,cAACsK,KAAM,CAACC,OAAO,aAAYxK,SAAEgL,EAAI7K,QAGrCF,cAAA,MAAIG,UAAU,WAAUJ,SACtBC,cAAA,UACEI,QAAS,kBAAMoK,EAAgBO,EAAIvC,IAAI,EACvCrI,UAAU,2BAA0BJ,SACrC,eAhBIgL,EAAIvC,IAoBR,IAEP,OACExI,cAACO,WAAQ,CAAAR,SACPD,eAAA,OAAK,WAAS,WAAUC,SAAA,CACtBC,cAAA,MAAIG,UAAU,iCAAgCJ,SAAC,0BAG9C8K,EAAUpH,OAAS,EAClBzD,cAACO,WAAQ,CAAAR,SACPC,cAAA,OAAKG,UAAU,gBAAeJ,SAC5BD,eAAA,SAAOK,UAAU,QAAOJ,SAAA,CACtBC,cAAA,SAAAD,SACED,eAAA,MAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,WACJC,cAAA,MAAIG,UAAU,UAASJ,SAAC,WACxBC,cAAA,MAAIG,UAAU,UAASJ,SAAC,mBACxBC,cAAA,MAAIG,UAAU,UAASJ,SAAC,UACxBC,cAAA,cAGJA,cAAA,SAAAD,SAAQ+K,WAKd9K,cAAA,KAAGG,UAAU,gBAAeJ,SAAC,kDAOvC,ICjBea,eAAQ,KAAM,CAAEoK,QC2CR,SAAAhI,GAAQ,sBAAAiC,EAAA1G,YAAAC,cAAAC,MAAI,SAAAyG,EAAMtI,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAwG,GAAA,cAAAA,EAAAtG,KAAAsG,EAAArG,MAAA,cAAAqG,EAAAtG,KAAA,EAAAsG,EAAArG,KAAA,EAE3B5B,EAAIwE,KAAK,SAAUsB,GAAU,KAAD,EAAxCtF,EAAGyH,EAAAnG,KAETpC,EAAS,CACPG,KAAMT,EACNU,QAASU,EAAIuB,OAGfrC,EAASH,EAAS,gBAAiB,YAAY0I,EAAArG,KAAA,gBAAAqG,EAAAtG,KAAA,EAAAsG,EAAAjG,GAAAiG,EAAA,SAE/CvI,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEN,IAAKyI,EAAAjG,GAAI1B,SAASsG,WAAYC,OAAQoB,EAAAjG,GAAI1B,SAASuG,UAC7D,yBAAAoB,EAAAhG,OAAA,GAAA+F,EAAA,kBAEN,gBAAAG,GAAA,OAAAJ,EAAA5F,MAAA,KAAAC,UAAA,EAhB8B,EAgB9B,GD3DcsB,EArCE,SAAHtC,GAAqB,IAAf0M,EAAO1M,EAAP0M,QAClBlJ,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BmJ,EAAIjJ,EAAA,GAAEkJ,EAAOlJ,EAAA,GAEpB,OACElC,eAAA,OAAKK,UAAU,gBAAgB,WAAS,WAAUJ,SAAA,CAChDD,eAAA,OAAKK,UAAU,kCAAiCJ,SAAA,CAC9CC,cAAA,MAAAD,SAAI,gCACJC,cAAA,MAAAD,SAAI,0BAEND,eAAA,QACEK,UAAU,YACVwC,SAAU,SAACN,GACTA,EAAEO,iBACFoI,EAAQ,CAAEC,SACVC,EAAQ,GACV,EAAEnL,SAAA,CAEFC,cAAA,YACEyC,KAAK,OACL0E,KAAK,KACLC,KAAK,IACLvE,YAAY,gBACZH,MAAOuI,EACP7I,SAAU,SAACC,GAAC,OAAK6I,EAAQ7I,EAAEG,OAAOE,MAAM,EACxCyI,UAAQ,IAGVnL,cAAA,SAAOjD,KAAK,SAASoD,UAAU,oBAAoBuC,MAAM,gBAIjE,IE2Ee9B,gBALS,SAACC,GAAK,MAAM,CAClCpB,KAAMoB,EAAMpB,KACZmF,QAAS/D,EAAM+D,QAChB,GAEuC,CAAEf,qBAAmBuH,cjBwHhC,WAAH,sBAAAC,EAAA9M,YAAAC,cAAAC,MAAS,SAAA6M,EAAO1O,GAAQ,OAAA4B,cAAAG,MAAA,SAAA4M,GAAA,cAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,WAE9C0M,OAAOC,QAAQ,6DAA4D,CAAAF,EAAAzM,KAAA,gBAAAyM,EAAA1M,KAAA,EAAA0M,EAAAzM,KAAA,EAGnE5B,EAAI+M,OAAO,YAAY,KAAD,EAE5BrN,EAAS,CACPG,KAAMlB,IAERe,EAAS,CACPG,KAAMhB,IAERa,EAASH,EAAS,gCAAiC,YAAY8O,EAAAzM,KAAA,gBAAAyM,EAAA1M,KAAA,EAAA0M,EAAArM,GAAAqM,EAAA,SAE/D3O,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAK6O,EAAArM,GAAI1B,SAASsG,WAAYC,OAAQwH,EAAArM,GAAI1B,SAASuG,UAC7D,yBAAAwH,EAAApM,OAAA,GAAAmM,EAAA,kBAGR,gBAAAI,GAAA,OAAAL,EAAAhM,MAAA,KAAAC,UAAA,EArByB,EAqBzB,GiB7IcsB,EAtGG,SAAHtC,GAKR,IAJLuF,EAAiBvF,EAAjBuF,kBACAuH,EAAa9M,EAAb8M,cACQlD,EAAI5J,EAAZmB,KAAQyI,KAAI5C,EAAAhH,EACZsG,QAAWA,EAAOU,EAAPV,QAASjF,EAAO2F,EAAP3F,QAMpB,OAJAiG,qBAAU,WACR/B,GACF,GAAG,CAACA,IAEGlE,GAAuB,OAAZiF,EAChB5E,cAACoJ,GAAO,IAERpJ,cAAA,OAAKG,UAAU,GAAEJ,SACfC,cAAA,WAASG,UAAU,GAAEJ,SACnBD,eAACS,WAAQ,CAAAR,SAAA,CACPD,eAAA,OAAKK,UAAU,oCAAmCJ,SAAA,CAChDC,cAAA,MAAAD,SAAI,6BACJD,eAAA,MAAAC,SAAA,CACG,IAAI,yEAIPC,cAAA,OAAKG,UAAU,kBAAiBJ,SAC9BC,cAAA,MAAIG,UAAU,WAAUJ,SACtBD,eAACG,IAAI,CAACC,GAAG,oCAAmCH,SAAA,CAC1CC,cAAA,KAAGG,UAAU,uBACbH,cAAA,QAAMG,UAAU,UAASJ,SAAC,sBAKlCC,cAAA,MAAIG,UAAU,sCAAqCJ,SAAC,cACpDC,cAAA,KAAGG,UAAU,OAAMJ,SACjBD,eAAA,KAAGK,UAAU,cAAaJ,SAAA,CAAC,WAASmI,GAAQA,EAAKzF,UAEnD3C,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CAAC,iBAAemI,GAAQA,EAAK/G,SACnC,OAAZyD,EACC9E,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,OAAKG,UAAU,SAAQJ,SACL,MAAf6E,EAAQ+G,IACP3L,cAAA,OACEG,UAAU,QACV,WAAS,gBACTkJ,IAAKzE,EAAQ+G,IACbhC,IAAI,KAGN3J,cAAA,OACEG,UAAU,QACV,WAAS,gBACTkJ,IAAKnB,EAAK0D,OACVjC,IAAI,OAIV3J,cAAC4J,GAAgB,IACjB5J,cAAA,OAAKG,UAAU,SACfH,cAAA,OAAKG,UAAU,eAAe,WAAS,YAAWJ,SAChDC,cAAC6L,GAAQ,MAEX7L,cAAC8L,GAAU,CAAC3B,WAAYvF,EAAQuF,aAChCnK,cAAC+L,GAAS,CAAClB,UAAWjG,EAAQiG,YAC9B7K,cAAA,UACEG,UAAU,6CACVC,QAAS,kBAAMgL,GAAe,EAACrL,SAE/BD,eAAA,KAAAC,SAAA,CACEC,cAAA,KAAGG,UAAU,sBAAwB,0BAK3CL,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,KAAAD,SAAG,+BACHC,cAACC,IAAI,CACHC,GAAG,kBACHC,UAAU,uCAAsCJ,SACjD,4BASf,I,iCCjFiBa,gBAJS,SAAAC,GAAK,MAAK,CAChCpB,KAAMoB,EAAMpB,KACb,GAEcmB,EAZI,SAAHtC,GAAA,IAAe0N,EAAS1N,EAAnB2N,UAASzM,EAAAlB,EAAYmB,KAAMC,EAAeF,EAAfE,gBAAiBC,EAAOH,EAAPG,QAAauM,EAAIC,aAAA7N,EAAA8N,IAAA,OAChFpM,cAACqM,IAAK/J,wBAAA,GAAK4J,GAAI,IAAEI,OAAU,SAAAjJ,GAAK,OAAK3D,GAAoBC,EAAwCK,cAACgM,EAAS1J,YAAA,GAAKe,IAA5CrD,cAACe,IAAQ,CAACb,GAAG,UAAyC,IAAG,ICyClHqM,GA3CK,SAAHjO,GASV,IAADgH,EAAAhH,EARJsG,QAAO4H,EAAAlH,EACL4C,KAAQM,EAAGgE,EAAHhE,IAAK/F,EAAI+J,EAAJ/J,KAAMmJ,EAAMY,EAANZ,OACnBD,EAAGrG,EAAHqG,IACA5H,EAAMuB,EAANvB,OACAE,EAAOqB,EAAPrB,QACAE,EAAQmB,EAARnB,SACAC,EAAMkB,EAANlB,OAGF,OACEtE,eAAA,OAAKK,UAAU,oBAAmBJ,SAAA,CAChCC,cAAA,OACEqJ,IAAY,MAAPsC,EAAcA,EAAMC,EACzBjC,IAAI,GACJxJ,UAAU,YACV,WAAS,kBAEXL,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAK0C,IACL3C,eAAA,KAAAC,SAAA,CACGgE,EAAO,IAAEE,GAAWnE,eAAA,QAAAC,SAAA,CAAM,OAAKkE,QAElCjE,cAAA,KAAGG,UAAU,OAAMJ,SAAEoE,GAAYnE,cAAA,QAAAD,SAAOoE,MACxCnE,cAACC,IAAI,CAACC,GAAE,YAAAyD,OAAc6E,GAAOrI,UAAU,wBAAuBJ,SAAC,oBAIjEC,cAAA,MAAAD,SACGqE,EAAOqI,MAAM,EAAG,GAAG/I,KAAI,SAACgJ,EAAOC,GAAK,OACnC7M,eAAA,MAAgBK,UAAU,cAAaJ,SAAA,CACrCC,cAAA,KAAGG,UAAU,iBAAiB,IAAEuM,IADzBC,EAEJ,QAKf,ECQe/L,gBAJS,SAACC,GAAK,MAAM,CAClC+D,QAAS/D,EAAM+D,QAChB,GAEuC,CAAEgI,YpBhBf,WAAH,sBAAA3J,EAAA1E,YAAAC,cAAAC,MAAS,SAAAyE,EAAOtG,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,OAG3C,OAFHlC,EAAS,CACPG,KAAMlB,IACLsH,EAAAtE,KAAA,EAAAsE,EAAArE,KAAA,EAEiB5B,EAAI6B,IAAI,YAAY,KAAD,EAA/BrB,EAAGyF,EAAAnE,KACTpC,EAAS,CACPG,KAAMpB,EACNqB,QAASU,EAAIuB,OACZkE,EAAArE,KAAA,gBAAAqE,EAAAtE,KAAA,EAAAsE,EAAAjE,GAAAiE,EAAA,SAEYA,EAAAjE,GAAI1B,SAASyB,KAAKvC,IAIjCE,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAKyG,EAAAjE,GAAI1B,SAASsG,WAAYC,OAAQZ,EAAAjE,GAAI1B,SAASuG,UAC7D,yBAAAZ,EAAAhE,OAAA,GAAA+D,EAAA,kBAEN,gBAAAE,GAAA,OAAAH,EAAA5D,MAAA,KAAAC,UAAA,EApBuB,EAoBvB,GoBJcsB,EA1CE,SAAHtC,GAAyD,IAAnDsO,EAAWtO,EAAXsO,YAAWtH,EAAAhH,EAAEsG,QAAWwD,EAAQ9C,EAAR8C,SAAUzI,EAAO2F,EAAP3F,QAKpD,OAJAiG,qBAAU,WACRgH,GACF,GAAG,CAACA,IAGF5M,cAACO,WAAQ,CAAAR,SACNJ,EACCK,cAACoJ,GAAO,IAERtJ,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,MAAIG,UAAU,qBAAoBJ,SAAC,sBACnCD,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CACjBC,cAAA,KAAGG,UAAU,0BAA0B,qCAGzCH,cAAA,OAAKG,UAAU,WAAUJ,SACtBqI,EAAS3E,OAAS,EACjB2E,EAAS1E,KAAI,SAACkB,GAAO,OACnB5E,cAAA,OAAKG,UAAU,GAAG,WAAS,aAAYJ,SACrCC,cAACuM,GAAW,CAAmB3H,QAASA,GAAtBA,EAAQ4D,MACtB,IAGRxI,cAAA,MAAAD,SAAI,+BAOlB,IClCe8M,OAJf,SAAoBC,GAClB,OAAO,IAAIC,KAAKC,gBAAiBzC,OAAO,IAAI0C,KAAKH,GACnD,ECKMI,GAAW,SAAH5O,GAOP,IANL6O,EAAO7O,EAAP6O,QACAC,EAAU9O,EAAV8O,WACAC,EAAU/O,EAAV+O,WACA5N,EAAInB,EAAJmB,KAAI6N,EAAAhP,EACJoD,KAAQ8G,EAAG8E,EAAH9E,IAAKyC,EAAIqC,EAAJrC,KAAMxI,EAAI6K,EAAJ7K,KAAMmJ,EAAM0B,EAAN1B,OAAQ1D,EAAIoF,EAAJpF,KAAMO,EAAK6E,EAAL7E,MAAOC,EAAQ4E,EAAR5E,SAAUoE,EAAIQ,EAAJR,KACxDS,EAAWjP,EAAXiP,YAEA,OACEzN,eAAA,OAAKK,UAAU,gBAAgB,WAAS,YAAWJ,SAAA,CACjDC,cAAA,OAAAD,SACED,eAACG,IAAI,CAACC,GAAE,YAAAyD,OAAcuE,GAAOnI,SAAA,CAC1BmG,QAAQC,IAAIyF,GACb5L,cAAA,OAAKG,UAAU,YAAYkJ,IAAK,eAAiBuC,EAAQjC,IAAI,KAC7D3J,cAAA,MAAAD,SAAK0C,SAGT3C,eAAA,OAAAC,SAAA,CACEC,cAAA,KAAGG,UAAU,OAAMJ,SAAEkL,IACrBnL,eAAA,KAAGK,UAAU,YAAWJ,SAAA,CAAC,aAAW8M,GAAWC,MAE9CS,GACCvN,cAACO,WAAQ,CAAAR,SACPD,eAAA,OAAKK,UAAU,oBAAmBJ,SAAA,CAChCD,eAAA,UACEM,QAAS,kBAAM+M,EAAQ3E,EAAI,EAC3BzL,KAAK,SACLoD,UAAU,gCAA+BJ,SAAA,CAEzCC,cAAA,KAAGG,UAAU,qBAAsB,IACnCH,cAAA,QAAAD,SAAO0I,EAAMhF,OAAS,GAAKzD,cAAA,QAAAD,SAAO0I,EAAMhF,cAE1CzD,cAAA,UACEI,QAAS,kBAAMgN,EAAW5E,EAAI,EAC9BzL,KAAK,SACLoD,UAAU,gCAA+BJ,SAEzCC,cAAA,KAAGG,UAAU,yBAEfL,eAACG,IAAI,CACHC,GAAE,UAAAyD,OAAY6E,GACdrI,UAAU,wCAAuCJ,SAAA,CAClD,aACY,IACV2I,EAASjF,OAAS,GACjBzD,cAAA,QAAMG,UAAU,gBAAeJ,SAAE2I,EAASjF,aAG5ChE,EAAKE,SAAWuI,IAASzI,EAAKyI,KAAKM,KACnCxI,cAAA,UACEI,QAAS,kBAAMiN,EAAW7E,EAAI,EAC9BzL,KAAK,SACLoD,UAAU,iBAAgBJ,SAE1BC,cAAA,KAAGG,UAAU,6BAS/B,EAEA+M,GAASM,aAAe,CACtBD,aAAa,GAYf,IAGe3M,gBAHS,SAACC,GAAK,MAAM,CAClCpB,KAAMoB,EAAMpB,KACb,GACuC,CAAE0N,QNxDnB,SAAAtQ,GAAE,sBAAAoG,EAAA1E,YAAAC,cAAAC,MAAI,SAAAyE,EAAMtG,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAAtE,KAAA,EAAAsE,EAAArE,KAAA,EAEnB5B,EAAIyJ,IAAI,gBAADhD,OAAiB9G,IAAM,KAAD,EAAzCa,EAAGyF,EAAAnE,KAETpC,EAAS,CACPG,KAAMX,EACNY,QAAS,CAAEH,KAAI4L,MAAO/K,EAAIuB,QACzBkE,EAAArE,KAAA,gBAAAqE,EAAAtE,KAAA,EAAAsE,EAAAjE,GAAAiE,EAAA,SAEHvG,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEN,IAAKyG,EAAAjE,GAAI1B,SAASsG,WAAYC,OAAQZ,EAAAjE,GAAI1B,SAASuG,UAC7D,yBAAAZ,EAAAhE,OAAA,GAAA+D,EAAA,kBAEN,gBAAAE,GAAA,OAAAH,EAAA5D,MAAA,KAAAC,UAAA,EAdsB,EActB,EM0CgD8N,WNvCvB,SAAAvQ,GAAE,sBAAAwE,EAAA9C,YAAAC,cAAAC,MAAI,SAAA6C,EAAM1E,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAExB5B,EAAIyJ,IAAI,iBAADhD,OAAkB9G,IAAM,KAAD,EAA1Ca,EAAG+D,EAAAzC,KAETpC,EAAS,CACPG,KAAMX,EACNY,QAAS,CAAEH,KAAI4L,MAAO/K,EAAIuB,QACzBwC,EAAA3C,KAAA,gBAAA2C,EAAA5C,KAAA,EAAA4C,EAAAvC,GAAAuC,EAAA,SAEH7E,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEN,IAAK+E,EAAAvC,GAAI1B,SAASsG,WAAYC,OAAQtC,EAAAvC,GAAI1B,SAASuG,UAC7D,yBAAAtC,EAAAtC,OAAA,GAAAmC,EAAA,kBAEN,gBAAAO,GAAA,OAAAR,EAAAhC,MAAA,KAAAC,UAAA,EAd2B,EAc3B,EMyB4D+N,WNtBnC,SAAAxQ,GAAE,sBAAA4Q,EAAAlP,YAAAC,cAAAC,MAAI,SAAAiP,EAAM9Q,GAAQ,OAAA4B,cAAAG,MAAA,SAAAgP,GAAA,cAAAA,EAAA9O,KAAA8O,EAAA7O,MAAA,cAAA6O,EAAA9O,KAAA,EAAA8O,EAAA7O,KAAA,EAEpC5B,EAAI+M,OAAO,UAADtG,OAAW9G,IAAM,KAAD,EAEhCD,EAAS,CACPG,KAAMV,EACNW,QAASH,IAGXD,EAASH,EAAS,eAAgB,YAAYkR,EAAA7O,KAAA,gBAAA6O,EAAA9O,KAAA,EAAA8O,EAAAzO,GAAAyO,EAAA,SAE9C/Q,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEN,IAAKiR,EAAAzO,GAAI1B,SAASsG,WAAYC,OAAQ4J,EAAAzO,GAAI1B,SAASuG,UAC7D,yBAAA4J,EAAAxO,OAAA,GAAAuO,EAAA,kBAEN,gBAAAE,GAAA,OAAAH,EAAApO,MAAA,KAAAC,UAAA,EAhB2B,EAgB3B,GMMYsB,CACbsM,ICjDatM,gBAJS,SAACC,GAAK,MAAM,CAClCa,KAAMb,EAAMa,KACb,GAEuC,CAAEmM,SP1BlB,WAAH,sBAAAvP,EAAAC,YAAAC,cAAAC,MAAQ,SAAAC,EAAM9B,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEjB5B,EAAI6B,IAAI,UAAS,OAA7BrB,EAAGkB,EAAAI,KAETpC,EAAS,CACLG,KAAKd,EACLe,QAAQU,EAAIuB,OACdL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEFhC,EAAS,CACLG,KAAKZ,EACLa,QAAQ,CAACN,IAAIkC,EAAAM,GAAI1B,SAASsG,WAAYC,OAAOnF,EAAAM,GAAI1B,SAASuG,UAE5D,yBAAAnF,EAAAO,OAAA,GAAAT,EAAA,kBAET,gBAAAU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,EAfoB,EAepB,GOWcsB,EAhCD,SAAHtC,GAAgD,IAA1CuP,EAAQvP,EAARuP,SAAQP,EAAAhP,EAAEoD,KAAQ6G,EAAK+E,EAAL/E,MAAO5I,EAAO2N,EAAP3N,QAKxC,OAJAiG,qBAAU,WACRiI,GACF,GAAG,CAACA,IAEGlO,EACLK,cAACoJ,GAAO,IAERtJ,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,MAAIG,UAAU,qBAAoBJ,SAAC,UACnCD,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CACjBC,cAAA,KAAGG,UAAU,gBAAgB,+BAE/BH,cAAC6L,GAAQ,IACT7L,cAAA,OAAKG,UAAU,QAAOJ,SACnBwI,EAAM7E,KAAI,SAAChC,EAAMkC,GAAG,OACnB5D,cAACkN,GAAQ,CAAgBxL,KAAMA,EAAMiL,MAAO/I,GAA7BlC,EAAK8G,IAA+B,QAK7D,ICWe5H,eACb,KACA,CAAEkN,WRiFsB,SAACC,EAAQ/K,GAAQ,sBAAAgL,EAAAzP,YAAAC,cAAAC,MAAK,SAAAwP,EAAMrR,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAuP,GAAA,cAAAA,EAAArP,KAAAqP,EAAApP,MAAA,cAAAoP,EAAArP,KAAA,EAAAqP,EAAApP,KAAA,EAExC5B,EAAIwE,KAAK,kBAADiC,OAAmBoK,GAAU/K,GAAU,KAAD,EAA1DtF,EAAGwQ,EAAAlP,KAETpC,EAAS,CACPG,KAAMR,EACNS,QAASU,EAAIuB,OAGfrC,EAASH,EAAS,gBAAiB,YAAYyR,EAAApP,KAAA,gBAAAoP,EAAArP,KAAA,EAAAqP,EAAAhP,GAAAgP,EAAA,SAE/CtR,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEN,IAAKwR,EAAAhP,GAAI1B,SAASsG,WAAYC,OAAQmK,EAAAhP,GAAI1B,SAASuG,UAC7D,yBAAAmK,EAAA/O,OAAA,GAAA8O,EAAA,kBAEN,gBAAAE,GAAA,OAAAH,EAAA3O,MAAA,KAAAC,UAAA,EAhB0C,EAgB1C,GQnGcsB,EAnCK,SAAHtC,GAAgC,IAA1ByP,EAAMzP,EAANyP,OAAQD,EAAUxP,EAAVwP,WAC7BhM,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BmJ,EAAIjJ,EAAA,GAAEkJ,EAAOlJ,EAAA,GAEpB,OACElC,eAAA,OAAKK,UAAU,YAAWJ,SAAA,CACxBC,cAAA,OAAKG,UAAU,eAAcJ,SAC3BC,cAAA,MAAAD,SAAI,sBAEND,eAAA,QACEK,UAAU,YACVwC,SAAU,SAAAN,GACRA,EAAEO,iBACFkL,EAAWC,EAAQ,CAAE9C,SACrBC,EAAQ,GACV,EAAEnL,SAAA,CAEFC,cAAA,YACEyC,KAAK,OACL0E,KAAK,KACLC,KAAK,IACLvE,YAAY,mBACZH,MAAOuI,EACP7I,SAAU,SAAAC,GAAC,OAAI6I,EAAQ7I,EAAEG,OAAOE,MAAM,EACtCyI,UAAQ,IAEVnL,cAAA,SAAOjD,KAAK,SAASoD,UAAU,oBAAoBuC,MAAM,gBAIjE,ICee9B,gBAJS,SAACC,GAAK,MAAM,CAClCpB,KAAMoB,EAAMpB,KACb,GAEuC,CAAE2O,cT6Fb,SAACL,EAAQM,GAAS,sBAAA/G,EAAA/I,YAAAC,cAAAC,MAAK,SAAA8I,EAAM3K,GAAQ,OAAA4B,cAAAG,MAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,cAAA0I,EAAA3I,KAAA,EAAA2I,EAAA1I,KAAA,EAExD5B,EAAI+M,OAAO,kBAADtG,OAAmBoK,EAAM,KAAApK,OAAI0K,IAAa,KAAD,EAEzDzR,EAAS,CACPG,KAAMP,EACNQ,QAASqR,IAGXzR,EAASH,EAAS,kBAAmB,YAAY+K,EAAA1I,KAAA,gBAAA0I,EAAA3I,KAAA,EAAA2I,EAAAtI,GAAAsI,EAAA,SAEjD5K,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEN,IAAK8K,EAAAtI,GAAI1B,SAASsG,WAAYC,OAAQyD,EAAAtI,GAAI1B,SAASuG,UAC7D,yBAAAyD,EAAArI,OAAA,GAAAoI,EAAA,kBAEN,gBAAAE,GAAA,OAAAH,EAAAjI,MAAA,KAAAC,UAAA,EAhB8C,EAgB9C,GS7GcsB,EAzCK,SAAHtC,GAAA,IACfyP,EAAMzP,EAANyP,OAAMO,EAAAhQ,EACNqK,QAAWH,EAAG8F,EAAH9F,IAAKyC,EAAIqD,EAAJrD,KAAMxI,EAAI6L,EAAJ7L,KAAMmJ,EAAM0C,EAAN1C,OAAQ1D,EAAIoG,EAAJpG,KAAM4E,EAAIwB,EAAJxB,KAC1CrN,EAAInB,EAAJmB,KACA2O,EAAa9P,EAAb8P,cAAa,OAEbtO,eAAA,OAAKK,UAAU,yBAAwBJ,SAAA,CACrCC,cAAA,OAAAD,SACED,eAACG,IAAI,CAACC,GAAE,YAAAyD,OAAcuE,GAAOnI,SAAA,CAE3BC,cAAA,OAAKG,UAAU,YAAYkJ,IAAK,eAAeuC,EAAQjC,IAAI,KAC3D3J,cAAA,MAAAD,SAAK0C,SAGT3C,eAAA,OAAAC,SAAA,CACEC,cAAA,KAAGG,UAAU,OAAMJ,SAAEkL,IACrBnL,eAAA,KAAGK,UAAU,YAAWJ,SAAA,CAAC,aAAW8M,GAAWC,OAC7CrN,EAAKE,SAAWuI,IAASzI,EAAKyI,KAAKM,KACnCxI,cAAA,UACEI,QAAS,kBAAMgO,EAAcL,EAAQvF,EAAI,EACzCzL,KAAK,SACLoD,UAAU,iBAAgBJ,SAE1BC,cAAA,KAAGG,UAAU,wBAIf,ICUOS,gBAJS,SAACC,GAAK,MAAM,CAClCa,KAAMb,EAAMa,KACb,GAEuC,CAAE6M,QV6DnB,SAAA1R,GAAE,sBAAA2J,EAAAjI,YAAAC,cAAAC,MAAI,SAAAgI,EAAM7J,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAA+H,GAAA,cAAAA,EAAA7H,KAAA6H,EAAA5H,MAAA,cAAA4H,EAAA7H,KAAA,EAAA6H,EAAA5H,KAAA,EAErB5B,EAAI6B,IAAI,UAAD4E,OAAW9G,IAAM,KAAD,EAAnCa,EAAGgJ,EAAA1H,KAETpC,EAAS,CACPG,KAAMb,EACNc,QAASU,EAAIuB,OACZyH,EAAA5H,KAAA,gBAAA4H,EAAA7H,KAAA,EAAA6H,EAAAxH,GAAAwH,EAAA,SAEH9J,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEN,IAAKgK,EAAAxH,GAAI1B,SAASsG,WAAYC,OAAQ2C,EAAAxH,GAAI1B,SAASuG,UAC7D,yBAAA2C,EAAAvH,OAAA,GAAAsH,EAAA,kBAEN,gBAAAG,GAAA,OAAAJ,EAAAnH,MAAA,KAAAC,UAAA,EAdwB,EAcxB,GU3EcsB,EAnCF,SAAHtC,GAAqD,IAA/CiQ,EAAOjQ,EAAPiQ,QAAOjB,EAAAhP,EAAEoD,KAAQA,EAAI4L,EAAJ5L,KAAM/B,EAAO2N,EAAP3N,QAAW6O,EAAKlQ,EAALkQ,MAKhD,OAJA5I,qBAAU,WACR2I,EAAQC,EAAMC,OAAO5R,GACvB,GAAG,CAAC0R,EAASC,EAAMC,OAAO5R,KAEnB8C,GAAoB,OAAT+B,EAChB1B,cAACoJ,GAAO,IAERtJ,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,OAAKG,UAAU,6BAA4BJ,SACzCD,eAACG,IAAI,CAACC,GAAG,SAASC,UAAU,sBAAqBJ,SAAA,CAC/CC,cAAA,KAAG0O,MAAM,mBAAmB,cAAY,SACxC1O,cAAA,QAAAD,SAAM,uBAGVC,cAACkN,GAAQ,CAACxL,KAAMA,EAAM6L,aAAa,IACnCvN,cAAC2O,GAAW,CAACZ,OAAQrM,EAAK8G,MAC1BxI,cAAA,OAAKG,UAAU,WAAUJ,SACtB2B,EAAKgH,SAAShF,KAAI,SAACiF,GAAO,OACzB3I,cAAC4O,GAAW,CAAmBjG,QAASA,EAASoF,OAAQrM,EAAK8G,KAA5CG,EAAQH,IAA2C,QAK/E,ICyBeqG,GAxDI,SAAHvQ,GAUT,IAADgH,EAAAhH,EATJsG,QACEb,EAAMuB,EAANvB,OACAE,EAAOqB,EAAPrB,QACAE,EAAQmB,EAARnB,SACAD,EAAOoB,EAAPpB,QACA4B,EAAMR,EAANQ,OACA6F,EAAGrG,EAAHqG,IAAGa,EAAAlH,EACH4C,KAAQzF,EAAI+J,EAAJ/J,KAAY+J,EAANZ,OAGhB,OACE5L,cAAA,OAAKG,UAAU,4BAA4B,WAAS,eAAcJ,SAChED,eAAA,OAAKK,UAAU,WAAUJ,SAAA,CACvBC,cAAA,OACE,WAAS,gBACTG,UAAU,mCACVkJ,IAAK,eAAiBsC,EACtBhC,IAAI,KAELzD,QAAQC,IAAIwF,GACb3L,cAAA,MAAIG,UAAU,QAAOJ,SAAE0C,IACvB3C,eAAA,KAAGK,UAAU,OAAMJ,SAAA,CAChBgE,EAAO,IAAEE,EAAUnE,eAAA,QAAAC,SAAA,CAAM,OAAKkE,KAAkB,QAEnDjE,cAAA,KAAAD,SAAIoE,EAAWnE,cAAA,QAAAD,SAAOoE,IAAmB,OACzCrE,eAAA,OAAKK,UAAU,aAAYJ,SAAA,CACxBmE,EACClE,cAAA,KAAGK,KAAM6D,EAAS1B,OAAO,SAASsM,IAAI,sBAAqB/O,SACzDC,cAAA,KAAGG,UAAU,yBAEb,KACH2F,EACGiJ,OAAOC,QAAQlJ,GACZkC,QAAO,SAAA/E,GAAA,IAAA5B,EAAAY,YAAAgB,EAAA,GAAG5B,EAAA,GAAO,OAAAA,EAAA,EAAW,IAC5BqC,KAAI,SAAA+J,GAAA,IAAAxI,EAAAhD,YAAAwL,EAAA,GAAE7J,EAAGqB,EAAA,GAAEvC,EAAKuC,EAAA,UACfjF,cAAA,KAEEK,KAAMqC,EACNF,OAAO,SACPsM,IAAI,sBAAqB/O,SAEzBC,cAAA,KAAGG,UAAS,UAAAwD,OAAYC,EAAG,aALtBA,EAMH,IAER,YAKd,ECpBeqL,GA9BM,SAAH3Q,GAAA,IAAAgH,EAAAhH,EAChBsG,QACEN,EAAGgB,EAAHhB,IACAF,EAAMkB,EAANlB,OACQ3B,EAAI6C,EAAZ4C,KAAQzF,KAAI,OAGd3C,eAAA,OAAKK,UAAU,6BAA4BJ,SAAA,CACxCuE,GACCxE,eAACS,WAAQ,CAAAR,SAAA,CACPD,eAAA,MAAIK,UAAU,eAAcJ,SAAA,CAAE0C,EAAKyM,OAAOC,MAAM,KAAK,GAAG,YACxDnP,cAAA,KAAAD,SAAIuE,IACJtE,cAAA,OAAKG,UAAU,YAGnBH,cAAA,MAAIG,UAAU,eAAcJ,SAAC,cAC7BC,cAAA,OAAKG,UAAU,SAAQJ,SACpBqE,EAAOV,KAAI,SAACgJ,EAAOC,GAAK,OACvB7M,eAAA,OAAiBK,UAAU,MAAKJ,SAAA,CAC9BC,cAAA,KAAGG,UAAU,iBAAiB,IAAEuM,IADxBC,EAEJ,QAGN,ECEOyC,GAxBW,SAAH9Q,GAAA,IAAA+Q,EAAA/Q,EACrB6L,WAAclG,EAAOoL,EAAPpL,QAAS4C,EAAKwI,EAALxI,MAAO1C,EAAQkL,EAARlL,SAAmBjE,GAAFmP,EAAPtI,QAAWsI,EAAFnP,IAAI4G,EAAIuI,EAAJvI,KAAME,EAAWqI,EAAXrI,YAAW,OAEtElH,eAAA,OAAK,WAAS,aAAYC,SAAA,CACxBC,cAAA,MAAIG,UAAU,YAAWJ,SAAEkE,IAC3BnE,eAAA,KAAAC,SAAA,CACG8M,GAAW/F,GAAM,MAAI5G,EAAK2M,GAAW3M,GAAM,SAE9CJ,eAAA,KAAAC,SAAA,CACEC,cAAA,UAAAD,SAAQ,eAAmB,IAAE8G,KAE/B/G,eAAA,KAAAC,SAAA,CACEC,cAAA,UAAAD,SAAQ,eAAmB,IAAEoE,KAE/BrE,eAAA,KAAAC,SAAA,CACEC,cAAA,UAAAD,SAAQ,kBAAsB,IAAEiH,OAE9B,ECOOsI,GAxBU,SAAHhR,GAAA,IAAAiR,EAAAjR,EACpBuM,UAAanD,EAAM6H,EAAN7H,OAAQC,EAAM4H,EAAN5H,OAAQC,EAAY2H,EAAZ3H,aAAuB1H,GAAFqP,EAAPxI,QAAWwI,EAAFrP,IAAI4G,EAAIyI,EAAJzI,KAAME,EAAWuI,EAAXvI,YAAW,OAEzElH,eAAA,OAAK,WAAS,YAAWC,SAAA,CACvBC,cAAA,MAAIG,UAAU,YAAWJ,SAAE2H,IAC3B5H,eAAA,KAAAC,SAAA,CACG8M,GAAW/F,GAAM,MAAI5G,EAAK2M,GAAW3M,GAAM,SAE9CJ,eAAA,KAAAC,SAAA,CACEC,cAAA,UAAAD,SAAQ,aAAiB,IAAE4H,KAE7B7H,eAAA,KAAAC,SAAA,CACEC,cAAA,UAAAD,SAAQ,qBAAyB,IAAE6H,KAErC9H,eAAA,KAAAC,SAAA,CACEC,cAAA,UAAAD,SAAQ,kBAAsB,IAAEiH,OAE9B,ECkCOpG,gBAJS,SAACC,GAAK,MAAM,CAClCwH,MAAOxH,EAAM+D,QAAQyD,MACtB,GAEuC,CAAEmH,e/BqBZ,SAACC,GAAc,sBAAAhC,EAAAlP,YAAAC,cAAAC,MAAK,SAAAiP,EAAO9Q,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAAgP,GAAA,cAAAA,EAAA9O,KAAA8O,EAAA7O,MAAA,cAAA6O,EAAA9O,KAAA,EAAA8O,EAAA7O,KAAA,EAE3C5B,EAAI6B,IAAI,mBAAD4E,OAAoB8L,IAAkB,KAAD,EAAxD/R,EAAGiQ,EAAA3O,KACTpC,EAAS,CACPG,KAAMf,EACNgB,QAASU,EAAIuB,OACZ0O,EAAA7O,KAAA,gBAAA6O,EAAA9O,KAAA,EAAA8O,EAAAzO,GAAAyO,EAAA,SAEYA,EAAAzO,GAAI1B,SAASyB,KAAKvC,IAIjCE,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAKiR,EAAAzO,GAAI1B,SAASsG,WAAYC,OAAQ4J,EAAAzO,GAAI1B,SAASuG,UAC7D,yBAAA4J,EAAAxO,OAAA,GAAAuO,EAAA,kBAEN,gBAAAE,GAAA,OAAAH,EAAApO,MAAA,KAAAC,UAAA,EAjB4C,EAiB5C,G+BtCcsB,EAjDO,SAAHtC,GAA6C,IAAvCoR,EAAQpR,EAARoR,SAAUF,EAAclR,EAAdkR,eAAgBnH,EAAK/J,EAAL+J,MAKjD,OAJAzC,qBAAU,WACR4J,EAAeE,EACjB,GAAG,CAACF,EAAgBE,IAGlB5P,eAAA,OAAKK,UAAU,iBAAiB,WAAS,UAASJ,SAAA,CAChDC,cAAA,MAAIG,UAAU,oBAAmBJ,SAAC,iBACjCsI,EAAM3E,KAAI,SAACiM,GAAI,OACd7P,eAAA,OAEEK,UAAU,yBACV,WAAS,YAAWJ,SAAA,CAEpBD,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SACEC,cAAA,KAAGK,KAAMsP,EAAKC,SAAUpN,OAAO,SAASsM,IAAI,sBAAqB/O,SAC9D4P,EAAKlN,SAGVzC,cAAA,KAAAD,SAAI4P,EAAK3I,iBAEXhH,cAAA,OAAKG,UAAU,kBACfH,cAAA,OAAAD,SACED,eAAA,MAAAC,SAAA,CACED,eAAA,MAAIK,UAAU,sBAAqBJ,SAAA,CAAC,UAC1B4P,EAAKE,oBAEf/P,eAAA,MAAIK,UAAU,mBAAkBJ,SAAA,CAAC,aACpB4P,EAAKG,yBAnBjBH,EAAK9S,GAuBN,MAId,IC+Ce+D,gBALS,SAACC,GAAK,MAAM,CAClC+D,QAAS/D,EAAM+D,QACfnF,KAAMoB,EAAMpB,KACb,GAEuC,CAAEsQ,ehClCZ,SAACC,GAAM,sBAAA3O,EAAA9C,YAAAC,cAAAC,MAAK,SAAA6C,EAAO1E,GAAQ,IAAAc,EAAA,OAAAc,cAAAG,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAEnC5B,EAAI6B,IAAI,iBAAD4E,OAAkBqM,IAAU,KAAD,EAA9CtS,EAAG+D,EAAAzC,KACTpC,EAAS,CACPG,KAAMrB,EACNsB,QAASU,EAAIuB,OACZwC,EAAA3C,KAAA,gBAAA2C,EAAA5C,KAAA,EAAA4C,EAAAvC,GAAAuC,EAAA,SAEYA,EAAAvC,GAAI1B,SAASyB,KAAKvC,IAIjCE,EAAS,CACPG,KAAMnB,EACNoB,QAAS,CAAEN,IAAK+E,EAAAvC,GAAI1B,SAASsG,WAAYC,OAAQtC,EAAAvC,GAAI1B,SAASuG,UAC7D,yBAAAtC,EAAAtC,OAAA,GAAAmC,EAAA,kBAEN,gBAAAO,GAAA,OAAAR,EAAAhC,MAAA,KAAAC,UAAA,EAjBoC,EAiBpC,GgCiBcsB,EA9EC,SAAHtC,GAA+D,IAAzDyR,EAAczR,EAAdyR,eAA2BnL,EAAOtG,EAAlBsG,QAAWA,QAAWnF,EAAInB,EAAJmB,KAAM+O,EAAKlQ,EAALkQ,MAK7D,OAJA5I,qBAAU,WACRmK,EAAevB,EAAMC,OAAO5R,GAC9B,GAAG,CAACkT,EAAgBvB,EAAMC,OAAO5R,KAG/BmD,cAACO,WAAQ,CAAAR,SACM,OAAZ6E,EACC5E,cAACoJ,GAAO,IAERtJ,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAAA,KAAGG,UAAU,eACbL,eAACG,IAAI,CAACC,GAAG,YAAYC,UAAU,mBAAkBJ,SAAA,CAC/CC,cAAA,KAAGG,UAAU,sBAAsB,uBAEpCV,EAAKC,kBACa,IAAjBD,EAAKE,SACLF,EAAKyI,KAAKM,MAAQ5D,EAAQsD,KAAKM,KAC7BxI,cAACC,IAAI,CAACC,GAAG,gBAAgBC,UAAU,0BAAyBJ,SAAC,iBAIjED,eAAA,OAAKK,UAAU,oBAAmBJ,SAAA,CAChCC,cAAC6O,GAAU,CAACjK,QAASA,IACrB5E,cAACiP,GAAY,CAACrK,QAASA,IACvB9E,eAAA,OAAKK,UAAU,2BAA2B,WAAS,WAAUJ,SAAA,CAC3DC,cAAA,MAAIG,UAAU,eAAcJ,SAAC,eAC5B6E,EAAQuF,WAAW1G,OAAS,EAC3BzD,cAACO,WAAQ,CAAAR,SACN6E,EAAQuF,WAAWzG,KAAI,SAACyG,GAAU,OACjCnK,cAACoP,GAAiB,CAEhBjF,WAAYA,GADPA,EAAW3B,IAEhB,MAINxI,cAAA,MAAAD,SAAI,iCAIRD,eAAA,OAAKK,UAAU,2BAA2B,WAAS,WAAUJ,SAAA,CAC3DC,cAAA,MAAIG,UAAU,eAAcJ,SAAC,cAC5B6E,EAAQiG,UAAUpH,OAAS,EAC1BzD,cAACO,WAAQ,CAAAR,SACN6E,EAAQiG,UAAUnH,KAAI,SAACmH,GAAS,OAC/B7K,cAACsP,GAAgB,CAEfzE,UAAWA,GADNA,EAAUrC,IAEf,MAINxI,cAAA,MAAAD,SAAI,gCAIP6E,EAAQP,gBACPrE,cAACiQ,GAAa,CAACP,SAAU9K,EAAQP,wBAO/C,I,oBCce6L,I,MA9DH,WAeV,OAdIhS,aAAaH,OACfD,EAAaI,aAAaH,OAE5B6H,qBAAU,WACRmD,GAAMnM,SAASyB,KACf8R,KAAIC,KAAK,CACPC,SAAU,IACVC,MAAM,GAEV,GAAG,IAMDtQ,cAACuQ,IAAQ,CAACxH,MAAOA,GAAMhJ,SACrBC,cAACwQ,IAAM,CAAAzQ,SACLD,eAACS,WAAQ,CAAAR,SAAA,CACPC,cAACT,EAAM,IACPS,cAACqM,IAAK,CAACoE,OAAK,EAACC,KAAK,IAAIzE,UAAWnL,IACjCd,cAAA,OAAK0O,MAAM,OACX1O,cAAA,OAAK0O,MAAM,WACX1O,cAAA,OAAK0O,MAAM,WACX5O,eAAA,WAASK,UAAU,YAAWJ,SAAA,CAC5BC,cAAC2Q,GAAK,IACN7Q,eAAC8Q,IAAM,CAAA7Q,SAAA,CACLC,cAAC6Q,GAAY,CAACJ,OAAK,EAACC,KAAK,aAAazE,UAAW6E,KACjD9Q,cAACqM,IAAK,CAACoE,OAAK,EAACC,KAAK,SAASzE,UAAW8E,IACtC/Q,cAACqM,IAAK,CAACoE,OAAK,EAACC,KAAK,YAAYzE,UAAW+E,KACzChR,cAACqM,IAAK,CAACoE,OAAK,EAACC,KAAK,YAAYzE,UAAWgF,KACzCjR,cAACqM,IAAK,CAACoE,OAAK,EAACC,KAAK,eAAezE,UAAWiF,KAC5ClR,cAAC6Q,GAAY,CACXJ,OAAK,EACLC,KAAK,kBACLzE,UAAWkF,KAEbnR,cAAC6Q,GAAY,CACXJ,OAAK,EACLC,KAAK,gBACLzE,UAAWkF,KAEbnR,cAAC6Q,GAAY,CACXJ,OAAK,EACLC,KAAK,kBACLzE,UAAWmF,KAEbpR,cAAC6Q,GAAY,CACXJ,OAAK,EACLC,KAAK,iBACLzE,UAAWoF,KAEbrR,cAAC6Q,GAAY,CAACJ,OAAK,EAACC,KAAK,SAASzE,UAAWqF,KAC7CtR,cAAC6Q,GAAY,CAACJ,OAAK,EAACC,KAAK,aAAazE,UAAWsF,iBAO/D,GCrFAC,IAASlF,OACPtM,cAACyR,IAAMC,WAAU,CAAA3R,SACfC,cAACkQ,GAAG,MAEN9J,SAASuL,eAAe,Q","file":"static/js/main.0ca7cedf.chunk.js","sourcesContent":["export const SET_ALERT = \"SET_ALERT\"\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\"\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\r\nexport const USER_LOADED = \"USER_LOADED\"\r\nexport const AUTH_ERROR = \"AUTH_ERROR\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\nexport const LOGOUT = \"LOGOUT\"\r\nexport const GET_PROFILE = \"GET_PROFILE\"\r\nexport const GET_PROFILES = \"GET_PROFILES\"\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\"\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\"\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\"\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\r\nexport const GET_REPOS = \"GET_REPOS\"\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n\r\n","import {SET_ALERT, REMOVE_ALERT} from \"./types\"\r\nimport {v4 as uuid} from \"uuid\"\r\n\r\nexport const setAlert = (msg, alertType) => dispatch=>{\r\n    const id = uuid();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload:{msg, alertType, id}\r\n    });\r\n\r\n    setTimeout(()=>dispatch({\r\n        type:REMOVE_ALERT,\r\n        payload:id\r\n    }),5000)\r\n};","import axios from 'axios';\r\n//import store from '../store';\r\n//import { LOGOUT } from '../actions/types';\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  res => res,\r\n  err => {\r\n    // if (err.response.status === 401) {\r\n    //   store.dispatch({ type: LOGOUT });\r\n    // }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import api from './api';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-auth-token'] = token;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete api.defaults.headers.common['x-auth-token'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport default setAuthToken;","\r\nimport {REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR, \r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE}\r\n       from \"./types\"\r\nimport {setAlert} from \"./alert\"\r\nimport api from '../utils/api'\r\nimport setAuthToken from \"../utils/setAuthToken\"\r\n\r\n\r\n//Load User\r\nexport const loadUser = ()=> async dispatch =>{\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n        const res = await api.get('/auth')\r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n//Register USER\r\nexport const register = formData =>async dispatch=>{\r\n\r\n    try {\r\n        const res = await api.post('/users', formData)\r\n        \r\n        dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n        });\r\n        dispatch(loadUser());\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")))\r\n        }\r\n\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n    const body = { email, password };\r\n  \r\n    try {\r\n      const res = await api.post('/auth', body);\r\n  \r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      });\r\n  \r\n      dispatch(loadUser());\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n  \r\n      if(errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n  \r\n      dispatch({\r\n        type: LOGIN_FAIL\r\n      });\r\n    }\r\n  };\r\n  \r\nexport const logout = () => dispatch=>{\r\n  dispatch({type:LOGOUT});\r\n  dispatch({type:CLEAR_PROFILE})\r\n   \r\n}","import React, {Fragment} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport {logout} from \"../../actions/auth\"\r\n\r\n\r\nexport const Navbar = ({auth:{isAuthenticated, loading}, logout}) => {\r\n\r\n  const authLinks = (\r\n    <ul>\r\n    <li>\r\n    <Link to=\"/posts\">\r\n    <i className=\"fas fa-comment-dots\"></i>\r\n    <span className=\"\"> Posts </span>\r\n    </Link>\r\n    </li>\r\n\r\n     <li>\r\n    <Link to=\"/profiles\"><i className=\"fas fa-users\"></i>  <span className=\"\"> People </span></Link></li>\r\n\r\n    <li>\r\n    <Link to=\"/profile/606e6d17afcf4c49e8451301\">\r\n    <i className=\"fas fa-user-shield\"></i>\r\n    <span className=\"\"> Admin </span>\r\n    </Link>\r\n    </li>\r\n\r\n    <li>\r\n    <Link to=\"/dashboard\">\r\n    <i className=\"fas fa-user-cog\"></i>\r\n    <span className=\"hide-sm\"> Dashboard </span>\r\n    </Link>\r\n    </li>\r\n    \r\n    <li><a onClick={logout} href='#!'>\r\n    <i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n    <span className=\"hide-sm\"> Logout </span>\r\n    </a></li>\r\n\r\n  </ul>\r\n  )\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n    <li><Link to=\"/profiles\"><i className=\"fas fa-users\"></i> People</Link></li>\r\n    <li>\r\n    <Link to=\"/profile/606e6d17afcf4c49e8451301\">\r\n    <i className=\"fas fa-user-shield\"></i>\r\n    <span className=\"\"> Admin </span>\r\n    </Link>\r\n    </li>\r\n    <li><Link to=\"/register\">Register</Link></li>\r\n    <li><Link to=\"/login\">Login</Link></li>\r\n    </ul>\r\n  )\r\n     return (\r\n        <nav className=\"navbar navbar-gradient\">\r\n        <h1>\r\n          <Link to=\"/\"><i className=\"fas fa-code\"></i> Sasta social platform</Link>\r\n        </h1>\r\n        {!loading && <Fragment>{isAuthenticated? authLinks: guestLinks}</Fragment>}\r\n      </nav>\r\n    );\r\n}\r\n\r\nNavbar.prototypes = {\r\n  logout:PropTypes.func.isRequired,\r\n  auth:PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state =>({\r\n  auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar)","import React from 'react'\r\nimport {Link, Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport const Landing = ({isAuthenticated}) => {\r\n\r\n  //ALTERNATIVE\r\n  // if(isAuthenticated)\r\n  //   return (<Redirect to=\"/dashboard\" />)\r\n  \r\n    return ( !isAuthenticated ?\r\n      (<section className=\"landing\">\r\n        <div className=\"dark-overlay\">\r\n    \r\n          <div className=\"landing-inner\">\r\n            <h1 className=\"x-large\">Connecting the World</h1>\r\n            <p className=\"lead\">\r\n              Create a profile/portfolio, share posts and get help from\r\n              others\r\n            </p>\r\n            <div className=\"buttons\">\r\n              <Link to=\"/register\" className=\"btn btn-gradient round-btn-only margin2\">Sign Up</Link>\r\n              <Link to=\"/login\" className=\"btn btn-light round-btn-only margin2\">Login</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      ):(<Redirect to=\"/dashboard\" />))\r\n   \r\n};\r\n\r\nLanding.protoTypes = {\r\n  isAuthenticated:PropTypes.bool,\r\n}\r\nconst mapStateToProps = state =>({\r\n  isAuthenticated:state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n  const [formdata, updateData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formdata;\r\n\r\n  const onChange = (e) =>\r\n    updateData({ ...formdata, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"blurred-box\">\r\n        <h1 className=\"large text-primary\">Sign In</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Sign in your Account\r\n        </p>\r\n\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n              className=\"loginRegisterForm do\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"loginRegisterForm do\"\r\n              name=\"password\"\r\n              minLength=\"6\"\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primary round-btn-only btn-blue-gradient\"\r\n            value=\"Login\"\r\n          />\r\n        </form>\r\n\r\n        <p className=\"my-1\">\r\n          Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n        </p>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, {Fragment, useState} from 'react'\r\nimport {Link, Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {setAlert} from \"../../actions/alert\"\r\nimport {register} from \"../../actions/auth\"\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Register = (props) => {\r\n\r\n  const[formdata, updateData] = useState({\r\n    name:\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n    password2:\"\"\r\n  });\r\n\r\n  const{name, email, password, password2} = formdata;\r\n\r\n  const onChange = (e)=>updateData({...formdata, [e.target.name]:e.target.value})\r\n\r\n  const onSubmit = async e=>{\r\n    e.preventDefault();\r\n    \r\n\r\n    if(password!==password2)\r\n      props.setAlert(\"Password Don't match\", \"danger\")\r\n    else{\r\n      props.register({name, email, password})\r\n    }\r\n  }\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n    return (\r\n      <Fragment>\r\n        <h1 className=\"large text-primary \">Sign Up</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n\r\n        <form className=\"form\" onSubmit={e=>onSubmit(e)}>\r\n          <div className=\"form-group form-outline\">\r\n            <input type=\"text\"\r\n             className=\"form-control loginRegisterForm do\" \r\n             placeholder=\"Name\" \r\n             name=\"name\" \r\n             value={name} \r\n             onChange = {e=>onChange(e)}\r\n              />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"email\"\r\n            className=\"loginRegisterForm do\"\r\n             placeholder=\"Email Address\" \r\n             name=\"email\" \r\n             value={email} \r\n             onChange = {e=>onChange(e)} \r\n             \r\n             />\r\n            <small className=\"form-text\">  This site uses Gravatar</small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              className=\"loginRegisterForm do\"\r\n              value={password} \r\n              onChange = {e=>onChange(e)}\r\n              />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              name=\"password2\"\r\n              className=\"loginRegisterForm do\"\r\n              value={password2} \r\n              onChange = {e=>onChange(e)}\r\n              />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary round-btn-only btn-blue-gradient\" value=\"Register\" />\r\n        </form>\r\n\r\n        <p className=\"my-1\">\r\n          Already have an account? <Link to=\"/login\">Sign In</Link>\r\n        </p>\r\n\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n  setAlert:PropTypes.func.isRequired,\r\n  register:PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, {setAlert, register})(Register);","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from \"react-redux\"\r\n\r\nconst Alert = ({alerts}) => alerts!==null && alerts.length>0 && alerts.map(alert =>(\r\n    <div key={alert.key} className={`alert round-btn-only alert-${alert.alertType}`}>\r\n        {alert.msg}\r\n    </div>\r\n))\r\nAlert.propTypes = {\r\n    alerts:PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    alerts:state.alert\r\n})\r\nexport default connect(mapStateToProps)(Alert)\r\n","import { setAlert } from \"./alert\";\r\nimport api from \"../utils/api\";\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  CLEAR_PROFILE,\r\n  GET_REPOS,\r\n} from \"./types\";\r\n\r\n//GET CURRENT USER PROFILE\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(\"/profile/me\");\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.msg;\r\n    if (errors) {\r\n      //dispatch(setAlert(errors, \"danger\"))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Get all user profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n  try {\r\n    const res = await api.get(\"/profile\");\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.msg;\r\n    if (errors) {\r\n      //dispatch(setAlert(errors, \"danger\"))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//GET profile by user id\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/user/${userId}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.msg;\r\n    if (errors) {\r\n      //dispatch(setAlert(errors, \"danger\"))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Get github repos\r\nexport const getGithubRepos = (githubUsername) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/github/${githubUsername}`);\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.msg;\r\n    if (errors) {\r\n      //dispatch(setAlert(errors, \"danger\"))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Create/update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await api.post(\"/profile\", formData);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n    //We can't use <Redirect> inside actions, so use history which has push method\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//ADD EXPERIENCE\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(\"/profile/experience\", formData);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Added\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//ADD GITHUB PROJECT URL\r\nexport const addGithubProjurl = (formdata, history) => async (dispatch) => {\r\n  try {\r\n    console.log(\"urllll - \", formdata);\r\n    const res = await api.put(\"/profile/projurl\", formdata);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Project Url updated\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//ADD EDUCATION\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(\"/profile/education\", formData);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Added\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/experience/$(id)`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/education/$(id)`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//DELETE ACCOUNT AND PROFILE\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (\r\n    window.confirm(\"Do you want to delete your account? This can't be undone!\")\r\n  ) {\r\n    try {\r\n      await api.delete(\"/profile\");\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n      dispatch({\r\n        type: ACCOUNT_DELETED,\r\n      });\r\n      dispatch(setAlert(\"Your Account has been deleted\", \"success\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nfunction topFunction() {\r\n  document.body.scrollTop = 0; // For Safari\r\n  document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n}\r\n\r\nconst initialState = {\r\n  company: \"\",\r\n  website: \"\",\r\n  location: \"\",\r\n  status: \"\",\r\n  skills: \"\",\r\n  githubusername: \"\",\r\n  bio: \"\",\r\n  twitter: \"\",\r\n  facebook: \"\",\r\n  linkedin: \"\",\r\n  youtube: \"\",\r\n  instagram: \"\",\r\n};\r\n\r\nconst ProfileForm = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(\", \");\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    createProfile(formData, history, profile ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Add some changes to your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select\r\n            name=\"status\"\r\n            className=\"round-btn-only\"\r\n            value={status}\r\n            onChange={onChange}\r\n          >\r\n            <option>* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\" Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            className=\"round-btn-only\"\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\" Website\"\r\n            className=\"round-btn-only\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\" Location\"\r\n            name=\"location\"\r\n            className=\"round-btn-only\"\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\" * Skills\"\r\n            className=\"round-btn-only\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\" Github Username\"\r\n            className=\"round-btn-only\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\" A short bio of yourself\"\r\n            className=\"round-btn-only\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-back round-btn-only\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span className=\"optional\">Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\" Twitter URL\"\r\n                className=\"round-btn-only\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\" Facebook URL\"\r\n                className=\"round-btn-only\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\" YouTube URL\"\r\n                className=\"round-btn-only\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\" Linkedin URL\"\r\n                className=\"round-btn-only\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\" Instagram URL\"\r\n                className=\"round-btn-only\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary my-1 btn-blue-gradient round-btn-only\"\r\n          onClick={() => topFunction()}\r\n        />\r\n        <Link className=\"btn btn-back my-1 round-btn-only\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfileForm.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  ProfileForm\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\n\r\nfunction topFunction() {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Experience</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"round-btn-only\"\r\n            type=\"text\"\r\n            placeholder=\" * Job Title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={onChange}\r\n            \r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"round-btn-only\"\r\n            type=\"text\"\r\n            placeholder=\" * Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"round-btn-only\"\r\n            placeholder=\"   Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input className=\"round-btn-only\" type=\"date\" name=\"from\" value={from} onChange={onChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            className=\"round-btn-only\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            className=\"round-btn-only\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\" Job Description\"\r\n            value={description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1 btn-blue-gradient round-btn-only\"  onClick={()=>topFunction()} />\r\n        <Link className=\"btn btn-back my-1 round-btn-only\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\n\r\n\r\nfunction topFunction() {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const { school, degree, fieldofstudy, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add your Education</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"round-btn-only\"\r\n            placeholder=\" * School Name\"\r\n            name=\"school\"\r\n            value={school}\r\n            onChange={onChange}\r\n            \r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"round-btn-only\"\r\n            placeholder=\" * Degree/Certificate\"\r\n            name=\"degree\"\r\n            value={degree}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"round-btn-only\"\r\n            placeholder=\" * Field of Study\"\r\n            name=\"fieldofstudy\"\r\n            value={fieldofstudy}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input className=\"round-btn-only\" type=\"date\" name=\"from\" value={from} onChange={onChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n              }}\r\n            />{' '}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            className=\"round-btn-only\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            className=\"round-btn-only\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"  Progrm Description\"\r\n            value={description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1 btn-blue-gradient round-btn-only\" onClick={()=>topFunction()}/>\r\n        <Link className=\"btn btn-back my-1 round-btn-only\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","import {SET_ALERT, REMOVE_ALERT} from \"../actions/types\"\r\nconst initialState = [];\r\n\r\nfunction alertReducer(state= initialState, action){\r\n    switch(action.type){\r\n        case SET_ALERT:\r\n            return [...state, action.payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== action.payload)\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default alertReducer","import {REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS,\r\n    LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED} from \"../actions/types\"\r\n\r\n\r\nconst initialState = {\r\n    token:localStorage.getItem(\"token\"),\r\n    isAuthenticated:null,\r\n    loading:true,\r\n    user:null\r\n}\r\n\r\nfunction authReducer(state=initialState,action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem(\"token\", payload.token)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated:true,\r\n                loading:false\r\n            }\r\n        \r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case AUTH_ERROR:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem(\"token\")\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                loading:false         \r\n            }\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isAuthenticated:true,\r\n                loading:false,\r\n                user:payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { CLEAR_PROFILE, GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE } from \"../actions/types\";\r\n\r\nconst initialState= {\r\n    profile:null,\r\n    profiles:[],\r\n    loading:true,\r\n    error:{},\r\n    repos:[]\r\n}\r\n\r\nfunction profileReducer(state=initialState, action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n        return{\r\n            ...state,\r\n             profile:payload,\r\n             loading:false\r\n        }\r\n\r\n        case GET_PROFILES:\r\n            return{\r\n                ...state,\r\n                profiles:payload,\r\n                loading:false\r\n            }\r\n\r\n        case PROFILE_ERROR:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:payload\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile:null,\r\n                repos:[],\r\n                loading:false\r\n            }\r\n        case GET_REPOS:\r\n            return{\r\n                ...state,\r\n                repos:payload,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n  } from '../actions/types';\r\n\r\nconst initialState= {\r\n    posts:[],\r\n    post:null,\r\n    loading:true,\r\n    error:{}\r\n}\r\n\r\nfunction post(state=initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n            ...state,\r\n            posts: payload,\r\n            loading: false\r\n        };\r\n        case GET_POST:\r\n        return {\r\n            ...state,\r\n            post: payload,\r\n            loading: false\r\n        };\r\n        case ADD_POST:\r\n        return {\r\n            ...state,\r\n            posts: [payload, ...state.posts],\r\n            loading: false\r\n        };\r\n        case DELETE_POST:\r\n        return {\r\n            ...state,\r\n            posts: state.posts.filter((post) => post._id !== payload),\r\n            loading: false\r\n        };\r\n        case POST_ERROR:\r\n        return {\r\n            ...state,\r\n            error: payload,\r\n            loading: false\r\n        };\r\n        case UPDATE_LIKES:\r\n        return {\r\n            ...state,\r\n            posts: state.posts.map((post) =>\r\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n            ),\r\n            loading: false\r\n        };\r\n        case ADD_COMMENT:\r\n        return {\r\n            ...state,\r\n            post: { ...state.post, comments: payload },\r\n            loading: false\r\n        };\r\n        case REMOVE_COMMENT:\r\n        return {\r\n            ...state,\r\n            post: {\r\n            ...state.post,\r\n            comments: state.post.comments.filter(\r\n                (comment) => comment._id !== payload\r\n            )\r\n            },\r\n            loading: false\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default post;","import {combineReducers} from \"redux\";\r\nimport alert from \"./alert\"\r\nimport auth from \"./auth\"\r\nimport profile from \"./profile\"\r\nimport post from \"./post\"\r\n\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n    \r\n});","import {createStore, applyMiddleware} from \"redux\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n\r\n","export default __webpack_public_path__ + \"static/media/spinner.d3e7fc04.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const DashboardActions = () => {\r\n  return (\r\n    <div className=\"dashboard-btns btn-blue-gradient-div\" data-aos=\"flip-up\">\r\n      <Link\r\n        to=\"/edit-profile\"\r\n        className=\"btnblock btn-blue-gradient round-btn margin-adjust \"\r\n      >\r\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/add-experience\"\r\n        className=\"btnblock btn-blue-gradient round-btn margin-adjust\"\r\n      >\r\n        <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\r\n      </Link>\r\n\r\n      <Link\r\n        to=\"/add-education\"\r\n        className=\"btnblock btn-blue-gradient round-btn margin-adjust\"\r\n      >\r\n        <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteExperience } from \"../../actions/profile\";\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td className=\"light-bg\">{exp.company}</td>\r\n      <td className=\"hide-sm light-bg\">{exp.title}</td>\r\n      <td className=\"hide-sm light-bg\">\r\n        <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment> -{\" \"}\r\n        {exp.to === null ? (\r\n          \"Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td className=\"light-bg\">\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className=\"btn btn-danger round-btn\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <div className=\"dash_exp_edu\" data-aos=\"zoom-out\">\r\n        <div className=\"line2\" />\r\n        <h2 className=\"tablePosition\">Experience credentials</h2>\r\n        {experience.length > 0 ? (\r\n          <Fragment>\r\n            <div className=\"tablePosition\">\r\n              <table className=\"table div-max-width\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Company</th>\r\n                    <th className=\"hide-sm\">Title</th>\r\n                    <th className=\"hide-sm\">Years</th>\r\n                    <th />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{experiences}</tbody>\r\n              </table>\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <p className=\"tablePosition\"> You have not added any experiences</p>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteEducation } from \"../../actions/profile\";\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td className=\"light-bg\">{edu.school}</td>\r\n      <td className=\"hide-sm light-bg\">{edu.degree}</td>\r\n      <td className=\"hide-sm light-bg\">{edu.fieldofstudy}</td>\r\n      <td className=\"hide-sm light-bg\">\r\n        <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -{\" \"}\r\n        {edu.to === null ? (\r\n          \"Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td className=\"light-bg\">\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className=\"btn btn-danger round-btn\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <div data-aos=\"zoom-out\">\r\n        <h2 className=\"my-marginup-only tablePosition\">\r\n          Education credentials\r\n        </h2>\r\n        {education.length > 0 ? (\r\n          <Fragment>\r\n            <div className=\"tablePosition\">\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>School</th>\r\n                    <th className=\"hide-sm\">Degree</th>\r\n                    <th className=\"hide-sm\">Field of Study</th>\r\n                    <th className=\"hide-sm\">Years</th>\r\n                    <th />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{educations}</tbody>\r\n              </table>\r\n            </div>\r\n          </Fragment>\r\n        ) : (\r\n          <p className=\"tablePosition\">\r\n            You have not added your Education history\r\n          </p>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"PostFormDash2\" data-aos=\"zoom-out\">\r\n      <div className=\"bg-primary p round-btn-only p-1\">\r\n        <h2> Engage with the community!</h2>\r\n        <h3> Post something...</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import api from '../utils/api'\r\nimport {setAlert} from \"./alert\"\r\nimport {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n  } from './types';\r\n\r\n\r\nexport const getPosts = ()=> async dispatch =>{\r\n    try {\r\n        const res = await api.get('/posts')\r\n\r\n        dispatch({\r\n            type:GET_POSTS,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{msg:err.response.statusText, status:err.response.status}\r\n\r\n        })\r\n    }\r\n}\r\n\r\n//Add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n      const res = await api.put(`/posts/likes/${id}`);\r\n  \r\n      dispatch({\r\n        type: UPDATE_LIKES,\r\n        payload: { id, likes: res.data }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Remove like\r\n  export const removeLike = id => async dispatch => {\r\n    try {\r\n      const res = await api.put(`/posts/unlike/${id}`);\r\n  \r\n      dispatch({\r\n        type: UPDATE_LIKES,\r\n        payload: { id, likes: res.data }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Delete post\r\n  export const deletePost = id => async dispatch => {\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n  \r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id\r\n      });\r\n  \r\n      dispatch(setAlert('Post Removed', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  \r\n// Add post\r\nexport const addPost = formData => async dispatch => {\r\n  try {\r\n    const res = await api.post('/posts', formData);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Post Uploaded', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await api.get(`/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  try {\r\n    const res = await api.post(`/posts/comment/${postId}`, formData);\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n  try {\r\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId\r\n    });\r\n\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DashboardActions } from \"./DashboardActions\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\nimport PostForm from \"../posts/PostForm\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div className=\"\">\r\n      <section className=\"\">\r\n        <Fragment>\r\n          <div className=\"bg-primary p-1 round-btn-only p-2\">\r\n            <h2> Message from Karamveer-</h2>\r\n            <h3>\r\n              {\" \"}\r\n              Thanks for your visit. Please do leave a review by uploading a\r\n              post\r\n            </h3>\r\n            <div className=\"white-bg-adjust\">\r\n              <ul className=\"white-bg\">\r\n                <Link to=\"/profile/606e6d17afcf4c49e8451301\">\r\n                  <i className=\"fas fa-user-shield\"></i>\r\n                  <span className=\"hide-sm\"> Admin </span>\r\n                </Link>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <h1 className=\"large text-primary my-marginup-only\">Dashboard</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-user\">Welcome {user && user.name}</i>\r\n          </p>\r\n          <p className=\"my-3\">Your email is {user && user.email}</p>\r\n          {profile !== null ? (\r\n            <Fragment>\r\n              <div className=\"setPic\">\r\n                {profile.pic != null ? (\r\n                  <img\r\n                    className=\"mypic\"\r\n                    data-aos=\"example-anim3\"\r\n                    src={profile.pic}\r\n                    alt=\"\"\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    className=\"mypic\"\r\n                    data-aos=\"example-anim3\"\r\n                    src={user.avatar}\r\n                    alt=\"\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <DashboardActions />\r\n              <div className=\"line\" />\r\n              <div className=\"PostFormDash\" data-aos=\"fade-down\">\r\n                <PostForm />\r\n              </div>\r\n              <Experience experience={profile.experience} />\r\n              <Education education={profile.education}></Education>\r\n              <button\r\n                className=\"btn-deleteAccount tablePosition deletebtn \"\r\n                onClick={() => deleteAccount()}\r\n              >\r\n                <p>\r\n                  <i className=\"fas fa-user-minus\"></i> Delete Account\r\n                </p>\r\n              </button>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <p>Please Create your Profile</p>\r\n              <Link\r\n                to=\"/create-profile\"\r\n                className=\"btn btn-gradient round-btn-only my-1\"\r\n              >\r\n                Create Profile\r\n              </Link>\r\n            </Fragment>\r\n          )}\r\n        </Fragment>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n//{user && user.name } means if user exists, show user.name\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from \"react-redux\"\r\nimport {Route, Redirect} from \"react-router-dom\"\r\n\r\nconst PrivateRoute = ({component:Component, auth:{isAuthenticated, loading}, ...rest}) => (\r\n    <Route {...rest} render = {props => !isAuthenticated && !loading ? (<Redirect to=\"/login\" />) : (<Component {...props} />)}/>\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(PrivateRoute);\r\n  ","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    pic,\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile bg-light2\">\r\n      <img\r\n        src={pic != null ? pic : avatar}\r\n        alt=\"\"\r\n        className=\"round-img\"\r\n        data-aos=\"example-anim3\"\r\n      />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className=\"btn btn-blue-contrast\">\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className=\"skill-color\">\r\n            <i className=\"fas fa-check\" /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect, Fragment } from \"react\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Profiles near you</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fab fa-connectdevelop\" /> Browse and connect with\r\n            people\r\n          </p>\r\n          <div className=\"profiles\">\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <div className=\"\" data-aos=\"fade-right\">\r\n                  <ProfileItem key={profile._id} profile={profile} />\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","function formatDate(date) {\r\n  return new Intl.DateTimeFormat().format(new Date(date));\r\n}\r\n\r\nexport default formatDate;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport formatDate from \"../../utils/formatDate\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => {\r\n  return (\r\n    <div className=\"post p-1 my-1\" data-aos=\"fade-down\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          {console.log(avatar)}\r\n          <img className=\"round-img\" src={\"../../../../\" + avatar} alt=\"\" />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className=\"my-1\">{text}</p>\r\n        <p className=\"post-date\">Posted on {formatDate(date)}</p>\r\n\r\n        {showActions && (\r\n          <Fragment>\r\n            <div className=\"margin-adjustpost\">\r\n              <button\r\n                onClick={() => addLike(_id)}\r\n                type=\"button\"\r\n                className=\"btn btn-light hover-bg-change\"\r\n              >\r\n                <i className=\"fas fa-thumbs-up\" />{\" \"}\r\n                <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n              </button>\r\n              <button\r\n                onClick={() => removeLike(_id)}\r\n                type=\"button\"\r\n                className=\"btn btn-light hover-bg-change\"\r\n              >\r\n                <i className=\"fas fa-thumbs-down\" />\r\n              </button>\r\n              <Link\r\n                to={`/posts/${_id}`}\r\n                className=\"btn btn-back margin-r hover-bg-change\"\r\n              >\r\n                Discussion{\" \"}\r\n                {comments.length > 0 && (\r\n                  <span className=\"comment-count\">{comments.length}</span>\r\n                )}\r\n              </Link>\r\n              {!auth.loading && user === auth.user._id && (\r\n                <button\r\n                  onClick={() => deletePost(_id)}\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                >\r\n                  <i className=\"fas fa-times\" />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPosts } from \"../../actions/post\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostItem from \"./PostItem\";\r\nimport PostForm from \"./PostForm\";\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map((post, key) => (\r\n          <PostItem key={post._id} post={post} index={key} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment the post'\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addComment }\r\n)(CommentForm);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport formatDate from '../../utils/formatDate';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n      \r\n        <img className=\"round-img\" src={\"../../../../\"+avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={() => deleteComment(postId, _id)}\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n        >\r\n          <i className=\"fas fa-times\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport CommentForm from \"../post/CommentForm\";\r\nimport CommentItem from \"../post/CommentItem\";\r\nimport { getPost } from \"../../actions/post\";\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"btn-blue-gradient btn-size\">\r\n        <Link to=\"/posts\" className=\"white back-to-posts\">\r\n          <i class=\"fa fa-arrow-left\" aria-hidden=\"true\" />\r\n          <span>Back To Posts</span>\r\n        </Link>\r\n      </div>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    pic,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg_light3 p-2\" data-aos=\"zoom-in-down\">\r\n      <div className=\"centered\">\r\n        <img\r\n          data-aos=\"example-anim3\"\r\n          className=\"round-img my-1 set-profiletopImg\"\r\n          src={\"../../../../\" + pic}\r\n          alt=\"\"\r\n        />\r\n        {console.log(pic)}\r\n        <h1 className=\"large\">{name}</h1>\r\n        <p className=\"lead\">\r\n          {status} {company ? <span> at {company}</span> : null}\r\n        </p>\r\n        <p>{location ? <span>{location}</span> : null}</p>\r\n        <div className=\"icons my-1\">\r\n          {website ? (\r\n            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fas fa-globe fa-2x\" />\r\n            </a>\r\n          ) : null}\r\n          {social\r\n            ? Object.entries(social)\r\n                .filter(([_, value]) => value)\r\n                .map(([key, value]) => (\r\n                  <a\r\n                    key={key}\r\n                    href={value}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <i className={`fab fa-${key} fa-2x`}></i>\r\n                  </a>\r\n                ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => (\r\n  <div className=\"profile-about bg-light p-2\">\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className=\"text-primary\">{name.trim().split(\" \")[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className=\"line\" />\r\n      </Fragment>\r\n    )}\r\n    <h2 className=\"text-primary\">Skill Set</h2>\r\n    <div className=\"skills\">\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className=\"p-1\">\r\n          <i className=\"fas fa-check\" /> {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport formatDate from \"../../utils/formatDate\";\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n  <div data-aos=\"fade-right\">\r\n    <h3 className=\"text-dark\">{company}</h3>\r\n    <p>\r\n      {formatDate(from)} - {to ? formatDate(to) : \"Now\"}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Location: </strong> {location}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport formatDate from \"../../utils/formatDate\";\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div data-aos=\"fade-left\">\r\n    <h3 className=\"text-dark\">{school}</h3>\r\n    <p>\r\n      {formatDate(from)} - {to ? formatDate(to) : \"Now\"}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\nimport { addGithubProjurl } from \"../../actions/profile\";\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos, username]);\r\n\r\n  return (\r\n    <div className=\"profile-github\" data-aos=\"zoom-in\">\r\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n      {repos.map((repo) => (\r\n        <div\r\n          key={repo.id}\r\n          className=\"repo bg-white p-1 my-1\"\r\n          data-aos=\"fade-down\"\r\n        >\r\n          <div>\r\n            <h4>\r\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {repo.name}\r\n              </a>\r\n            </h4>\r\n            <p>{repo.description}</p>\r\n          </div>\r\n          <div className=\"addProjectURL\"></div>\r\n          <div>\r\n            <ul>\r\n              <li className=\"badge badge-primary\">\r\n                Stars: {repo.stargazers_count}\r\n              </li>\r\n              <li className=\"badge badge-dark\">\r\n                Watchers: {repo.watchers_count}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport ProfileGithub from \"./ProfileGithub\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <i className=\"fa fa-back\"></i>\r\n          <Link to=\"/profiles\" className=\"btn btn-light ok\">\r\n            <i className=\"fas fa-arrow-left\" /> Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark ok sizeInc\">\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-exp bg-white p-2\" data-aos=\"zoom-out\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-edu bg-white p-2\" data-aos=\"zoom-out\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/layout/Alert\";\r\nimport ProfileForm from \"./components/profile-forms/ProfileForm\";\r\nimport AddExperience from \"./components/profile-forms/AddExperience\";\r\nimport AddEducation from \"./components/profile-forms/AddEducation\";\r\n\r\n//Redux\r\nimport { Provider } from \"react-redux\"; //Provider connects react with redux\r\n\r\nimport store from \"./store\";\r\n\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\n\r\nimport Profiles from \"./components/profiles/Profiles\";\r\nimport Posts from \"./components/posts/Posts\";\r\nimport Post from \"./components/post/Post\";\r\nimport Profile from \"./components/profile/Profile\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nconst App = () => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n    AOS.init({\r\n      duration: 1000,\r\n      once: true,\r\n    });\r\n  }, []);\r\n\r\n  // HERE, [] RUN THE CODE OF useEffect only once. if we change [] with int i =1,\r\n  // then everytime i changes, the snippet code with run\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <div class=\"bg\"></div>\r\n          <div class=\"bg bg2\"></div>\r\n          <div class=\"bg bg3\"></div>\r\n          <section className=\"container\">\r\n            <Alert />\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/profiles\" component={Profiles} />\r\n              <Route exact path=\"/profile/:id\" component={Profile} />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/create-profile\"\r\n                component={ProfileForm}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/edit-profile\"\r\n                component={ProfileForm}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/add-experience\"\r\n                component={AddExperience}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/add-education\"\r\n                component={AddEducation}\r\n              />\r\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n              <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}